2024-09-10 15:12:49.988 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 15:12:49 GMT 2024 - Repository folder size in bytes -> 21211 -> 20KB
2024-09-10 15:12:50.012 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 15:12:50 GMT 2024 - '.js'           -> count '21' -> size -> '17KB' 
2024-09-10 15:12:50.014 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 15:12:50 GMT 2024 - '.ts'           -> count '6' -> size -> '2KB' 
2024-09-10 15:12:50.015 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 15:12:50 GMT 2024 - '.json'         -> count '1' -> size -> '542 bytes' 
2024-09-10 15:12:50.017 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 15:12:50 GMT 2024 - '.log'          -> count '1' -> size -> '0 bytes' 
2024-09-10 15:12:50.236 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 15:12:50 GMT 2024 - Language detection is invoked                                                                                                   - stats -> '0.00%', '38.86' MB, '2608.86' MB 
2024-09-10 15:12:50.955 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 15:12:50 GMT 2024 - Language detection is done ...                                                          - 664 ms - 00h:00m:00s:664ms            - stats -> '0.00%', '0.00' MB, '2608.86' MB MAX => '0.00%', '0.00' MB
2024-09-10 15:12:50.959 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 15:12:50 GMT 2024 - Detected language 'JavaScript'
2024-09-10 15:12:51.047 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 15:12:51 GMT 2024 - Processing rules is invoked                                                                                                     - stats -> '0.00%', '28.01' MB, '2608.86' MB 
2024-09-10 15:18:31.592 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 15:18:31 GMT 2024 - Repository folder size in bytes -> 23108 -> 22KB
2024-09-10 15:18:31.624 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 15:18:31 GMT 2024 - '.js'           -> count '21' -> size -> '17KB' 
2024-09-10 15:18:31.627 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 15:18:31 GMT 2024 - '.ts'           -> count '6' -> size -> '2KB' 
2024-09-10 15:18:31.629 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 15:18:31 GMT 2024 - '.json'         -> count '1' -> size -> '542 bytes' 
2024-09-10 15:18:31.631 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 15:18:31 GMT 2024 - '.log'          -> count '1' -> size -> '1KB' 
2024-09-10 15:18:31.970 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 15:18:31 GMT 2024 - Language detection is invoked                                                                                                   - stats -> '0.00%', '38.72' MB, '2608.86' MB 
2024-09-10 15:18:33.026 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 15:18:32 GMT 2024 - Language detection is done ...                                                          - 1031 ms - 00h:00m:01s:31ms            - stats -> '0.00%', '27.45' MB, '2608.86' MB MAX => '0.00%', '27.45' MB
2024-09-10 15:18:33.030 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 15:18:33 GMT 2024 - Detected language 'JavaScript'
2024-09-10 15:18:33.098 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 15:18:33 GMT 2024 - Processing rules is invoked                                                                                                     - stats -> '0.00%', '28.73' MB, '2608.86' MB 
2024-09-10 15:23:44.146 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 15:23:44 GMT 2024 - Repository folder size in bytes -> 25003 -> 24KB
2024-09-10 15:23:44.171 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 15:23:44 GMT 2024 - '.js'           -> count '21' -> size -> '17KB' 
2024-09-10 15:23:44.174 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 15:23:44 GMT 2024 - '.ts'           -> count '6' -> size -> '2KB' 
2024-09-10 15:23:44.175 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 15:23:44 GMT 2024 - '.json'         -> count '1' -> size -> '542 bytes' 
2024-09-10 15:23:44.177 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 15:23:44 GMT 2024 - '.log'          -> count '1' -> size -> '3KB' 
2024-09-10 15:23:44.408 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 15:23:44 GMT 2024 - Language detection is invoked                                                                                                   - stats -> '0.00%', '40.94' MB, '2608.86' MB 
2024-09-10 15:23:44.831 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 15:23:44 GMT 2024 - Language detection is done ...                                                          - 418 ms - 00h:00m:00s:418ms            - stats -> '0.00%', '0.00' MB, '2608.86' MB MAX => '0.00%', '0.00' MB
2024-09-10 15:23:44.835 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 15:23:44 GMT 2024 - Detected language 'JavaScript'
2024-09-10 15:23:44.858 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 15:23:44 GMT 2024 - Processing rules is invoked                                                                                                     - stats -> '0.00%', '28.08' MB, '2608.86' MB 
2024-09-10 15:25:31.008 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 15:25:30 GMT 2024 - Repository folder size in bytes -> 26896 -> 26KB
2024-09-10 15:25:31.034 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 15:25:31 GMT 2024 - '.js'           -> count '21' -> size -> '17KB' 
2024-09-10 15:25:31.037 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 15:25:31 GMT 2024 - '.ts'           -> count '6' -> size -> '2KB' 
2024-09-10 15:25:31.038 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 15:25:31 GMT 2024 - '.json'         -> count '1' -> size -> '542 bytes' 
2024-09-10 15:25:31.040 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 15:25:31 GMT 2024 - '.log'          -> count '1' -> size -> '5KB' 
2024-09-10 15:25:31.279 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 15:25:31 GMT 2024 - Language detection is invoked                                                                                                   - stats -> '0.00%', '40.47' MB, '2608.86' MB 
2024-09-10 15:25:32.175 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 15:25:32 GMT 2024 - Language detection is done ...                                                          - 817 ms - 00h:00m:00s:817ms            - stats -> '0.00%', '0.00' MB, '2608.86' MB MAX => '0.00%', '0.00' MB
2024-09-10 15:25:32.178 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 15:25:32 GMT 2024 - Detected language 'JavaScript'
2024-09-10 15:25:32.249 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 15:25:32 GMT 2024 - Processing rules is invoked                                                                                                     - stats -> '0.00%', '28.89' MB, '2608.86' MB 
2024-09-10 15:25:52.826 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 15:25:52 GMT 2024 - -- - Configuration parsed...
2024-09-10 15:25:52.842 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 15:25:52 GMT 2024 - Processing rules is done ...                                                            - 20602 ms - 00h:00m:20s:602ms          - stats -> '0.00%', '51.79' MB, '2608.86' MB MAX => '0.00%', '118.00' MB
2024-09-10 15:25:52.934 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 15:25:52 GMT 2024 - Processing source code using Javascript engine
2024-09-10 15:25:52.940 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 15:25:52 GMT 2024 - Base source processing is invoked                                                                                               - stats -> '0.00%', '86.14' MB, '2608.86' MB 
2024-09-10 15:25:54.091 DEBUG overflowdb.Graph Graph.java:122: initialized Graph [0 nodes] from existing storage in 123ms
2024-09-10 15:25:54.139 INFO overflowdb.HeapUsageMonitor HeapUsageMonitor.java:55: installed GC monitors. will clear references if heap (after GC) is larger than 80%
2024-09-10 15:26:08.278 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 15:26:08 GMT 2024 - -- io.joern.jssrc2cpg.passes.AstCreationPass is invoked                                                                         - stats -> '0.00%', '60.07' MB, '2608.86' MB 
2024-09-10 15:29:59.236 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 15:29:59 GMT 2024 - Repository folder size in bytes -> 30297 -> 29KB
2024-09-10 15:29:59.263 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 15:29:59 GMT 2024 - '.js'           -> count '21' -> size -> '17KB' 
2024-09-10 15:29:59.265 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 15:29:59 GMT 2024 - '.ts'           -> count '6' -> size -> '2KB' 
2024-09-10 15:29:59.266 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 15:29:59 GMT 2024 - '.json'         -> count '1' -> size -> '542 bytes' 
2024-09-10 15:29:59.267 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 15:29:59 GMT 2024 - '.log'          -> count '1' -> size -> '8KB' 
2024-09-10 15:29:59.493 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 15:29:59 GMT 2024 - Language detection is invoked                                                                                                   - stats -> '0.00%', '41.53' MB, '3598.71' MB 
2024-09-10 15:30:00.212 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 15:30:00 GMT 2024 - Language detection is done ...                                                          - 680 ms - 00h:00m:00s:680ms            - stats -> '0.00%', '0.00' MB, '3598.71' MB MAX => '0.00%', '0.00' MB
2024-09-10 15:30:00.214 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 15:30:00 GMT 2024 - Detected language 'JavaScript'
2024-09-10 15:30:00.291 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 15:30:00 GMT 2024 - Processing rules is invoked                                                                                                     - stats -> '0.00%', '28.15' MB, '3598.71' MB 
2024-09-10 16:10:37.962 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:10:37 GMT 2024 - Repository folder size in bytes -> 32190 -> 31KB
2024-09-10 16:10:37.999 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:10:37 GMT 2024 - '.js'           -> count '21' -> size -> '17KB' 
2024-09-10 16:10:38.003 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:10:38 GMT 2024 - '.ts'           -> count '6' -> size -> '2KB' 
2024-09-10 16:10:38.004 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:10:38 GMT 2024 - '.json'         -> count '1' -> size -> '542 bytes' 
2024-09-10 16:10:38.006 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:10:38 GMT 2024 - '.log'          -> count '1' -> size -> '10KB' 
2024-09-10 16:10:38.321 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:10:38 GMT 2024 - Language detection is invoked                                                                                                   - stats -> '0.00%', '41.72' MB, '3598.71' MB 
2024-09-10 16:10:39.484 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:10:39 GMT 2024 - Language detection is done ...                                                          - 1158 ms - 00h:00m:01s:158ms           - stats -> '0.00%', '27.04' MB, '3598.71' MB MAX => '0.00%', '27.04' MB
2024-09-10 16:10:39.490 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:10:39 GMT 2024 - Detected language 'JavaScript'
2024-09-10 16:10:39.556 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:10:39 GMT 2024 - Processing rules is invoked                                                                                                     - stats -> '0.00%', '28.60' MB, '3598.71' MB 
2024-09-10 16:11:02.571 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:02 GMT 2024 - -- - Configuration parsed...
2024-09-10 16:11:02.687 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:02 GMT 2024 - Processing rules is done ...                                                            - 23103 ms - 00h:00m:23s:103ms          - stats -> '0.00%', '53.38' MB, '3598.71' MB MAX => '0.00%', '85.67' MB
2024-09-10 16:11:02.863 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:02 GMT 2024 - Processing source code using Javascript engine
2024-09-10 16:11:02.869 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:02 GMT 2024 - Base source processing is invoked                                                                                               - stats -> '0.00%', '161.67' MB, '3598.71' MB 
2024-09-10 16:11:04.312 DEBUG overflowdb.Graph Graph.java:122: initialized Graph [0 nodes] from existing storage in 113ms
2024-09-10 16:11:04.363 INFO overflowdb.HeapUsageMonitor HeapUsageMonitor.java:55: installed GC monitors. will clear references if heap (after GC) is larger than 80%
2024-09-10 16:11:18.478 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:18 GMT 2024 - -- io.joern.jssrc2cpg.passes.AstCreationPass is invoked                                                                         - stats -> '0.00%', '60.29' MB, '3598.71' MB 
2024-09-10 16:11:23.637 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:23 GMT 2024 - -- io.joern.jssrc2cpg.passes.AstCreationPass is done ...                                - 5156 ms - 00h:00m:05s:156ms           - stats -> '0.00%', '70.65' MB, '3598.71' MB MAX => '0.00%', '98.81' MB
2024-09-10 16:11:23.678 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:23 GMT 2024 - -- io.joern.jssrc2cpg.passes.JavaScriptTypeNodePass$$anon$1 is invoked                                                          - stats -> '0.00%', '79.48' MB, '3598.71' MB 
2024-09-10 16:11:23.782 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:23 GMT 2024 - -- io.joern.jssrc2cpg.passes.JavaScriptTypeNodePass$$anon$1 is done ...                 - 102 ms - 00h:00m:00s:102ms            - stats -> '0.00%', '0.00' MB, '3598.71' MB MAX => '0.00%', '0.00' MB
2024-09-10 16:11:23.789 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:23 GMT 2024 - -- io.joern.jssrc2cpg.passes.JavaScriptMetaDataPass is invoked                                                                  - stats -> '0.00%', '80.44' MB, '3598.71' MB 
2024-09-10 16:11:23.805 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:23 GMT 2024 - -- io.joern.jssrc2cpg.passes.JavaScriptMetaDataPass is done ...                         - 18 ms - 00h:00m:00s:18ms              - stats -> '0.00%', '0.00' MB, '3598.71' MB MAX => '0.00%', '0.00' MB
2024-09-10 16:11:23.812 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:23 GMT 2024 - -- io.joern.jssrc2cpg.passes.DependenciesPass is invoked                                                                        - stats -> '0.00%', '80.94' MB, '3598.71' MB 
2024-09-10 16:11:24.054 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:24 GMT 2024 - -- io.joern.jssrc2cpg.passes.DependenciesPass is done ...                               - 244 ms - 00h:00m:00s:244ms            - stats -> '0.00%', '0.00' MB, '3598.71' MB MAX => '0.00%', '0.00' MB
2024-09-10 16:11:24.068 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:24 GMT 2024 - -- io.joern.jssrc2cpg.passes.ConfigPass is invoked                                                                              - stats -> '0.00%', '83.13' MB, '3598.71' MB 
2024-09-10 16:11:24.363 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:24 GMT 2024 - -- io.joern.jssrc2cpg.passes.ConfigPass is done ...                                     - 296 ms - 00h:00m:00s:296ms            - stats -> '0.00%', '0.00' MB, '3598.71' MB MAX => '0.00%', '0.00' MB
2024-09-10 16:11:24.379 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:24 GMT 2024 - -- io.joern.jssrc2cpg.passes.PrivateKeyFilePass is invoked                                                                      - stats -> '0.00%', '40.00' MB, '3598.71' MB 
2024-09-10 16:11:24.418 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:24 GMT 2024 - -- io.joern.jssrc2cpg.passes.PrivateKeyFilePass is done ...                             - 44 ms - 00h:00m:00s:44ms              - stats -> '0.00%', '0.00' MB, '3598.71' MB MAX => '0.00%', '0.00' MB
2024-09-10 16:11:24.427 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:24 GMT 2024 - -- io.joern.jssrc2cpg.passes.ImportsPass is invoked                                                                             - stats -> '0.00%', '40.34' MB, '3598.71' MB 
2024-09-10 16:11:24.658 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:24 GMT 2024 - -- io.joern.jssrc2cpg.passes.ImportsPass is done ...                                    - 229 ms - 00h:00m:00s:229ms            - stats -> '0.00%', '42.77' MB, '3598.71' MB MAX => '0.00%', '42.77' MB
2024-09-10 16:11:24.794 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:24 GMT 2024 - Base source processing is done ...                                                      - 21924 ms - 00h:00m:21s:924ms          - stats -> '0.00%', '58.63' MB, '3598.71' MB MAX => '0.00%', '98.81' MB
2024-09-10 16:11:24.800 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:24 GMT 2024 - Applying default overlays is invoked                                                                                            - stats -> '0.00%', '44.08' MB, '3598.71' MB 
2024-09-10 16:11:24.874 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:24 GMT 2024 - -- io.joern.x2cpg.passes.base.FileCreationPass is invoked                                                                       - stats -> '0.00%', '44.87' MB, '3598.71' MB 
2024-09-10 16:11:24.938 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:24 GMT 2024 - -- io.joern.x2cpg.passes.base.FileCreationPass is done ...                              - 66 ms - 00h:00m:00s:66ms              - stats -> '0.00%', '0.00' MB, '3598.71' MB MAX => '0.00%', '0.00' MB
2024-09-10 16:11:24.943 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:24 GMT 2024 - -- io.joern.x2cpg.passes.base.NamespaceCreator is invoked                                                                       - stats -> '0.00%', '45.55' MB, '3598.71' MB 
2024-09-10 16:11:24.969 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:24 GMT 2024 - -- io.joern.x2cpg.passes.base.NamespaceCreator is done ...                              - 28 ms - 00h:00m:00s:28ms              - stats -> '0.00%', '0.00' MB, '3598.71' MB MAX => '0.00%', '0.00' MB
2024-09-10 16:11:24.973 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:24 GMT 2024 - -- io.joern.x2cpg.passes.base.TypeDeclStubCreator is invoked                                                                    - stats -> '0.00%', '45.94' MB, '3598.71' MB 
2024-09-10 16:11:24.994 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:24 GMT 2024 - -- io.joern.x2cpg.passes.base.TypeDeclStubCreator is done ...                           - 22 ms - 00h:00m:00s:22ms              - stats -> '0.00%', '0.00' MB, '3598.71' MB MAX => '0.00%', '0.00' MB
2024-09-10 16:11:24.998 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:24 GMT 2024 - -- io.joern.x2cpg.passes.base.MethodStubCreator is invoked                                                                      - stats -> '0.00%', '46.25' MB, '3598.71' MB 
2024-09-10 16:11:25.071 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:25 GMT 2024 - -- io.joern.x2cpg.passes.base.MethodStubCreator is done ...                             - 73 ms - 00h:00m:00s:73ms              - stats -> '0.00%', '0.00' MB, '3598.71' MB MAX => '0.00%', '0.00' MB
2024-09-10 16:11:25.076 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:25 GMT 2024 - -- io.joern.x2cpg.passes.base.ParameterIndexCompatPass is invoked                                                               - stats -> '0.00%', '46.96' MB, '3598.71' MB 
2024-09-10 16:11:25.083 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:25 GMT 2024 - -- io.joern.x2cpg.passes.base.ParameterIndexCompatPass is done ...                      - 10 ms - 00h:00m:00s:10ms              - stats -> '0.00%', '0.00' MB, '3598.71' MB MAX => '0.00%', '0.00' MB
2024-09-10 16:11:25.087 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:25 GMT 2024 - -- io.joern.x2cpg.passes.base.MethodDecoratorPass is invoked                                                                    - stats -> '0.00%', '46.96' MB, '3598.71' MB 
2024-09-10 16:11:25.123 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:25 GMT 2024 - -- io.joern.x2cpg.passes.base.MethodDecoratorPass is done ...                           - 37 ms - 00h:00m:00s:37ms              - stats -> '0.00%', '0.00' MB, '3598.71' MB MAX => '0.00%', '0.00' MB
2024-09-10 16:11:25.126 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:25 GMT 2024 - -- io.joern.x2cpg.passes.base.AstLinkerPass is invoked                                                                          - stats -> '0.00%', '47.64' MB, '3598.71' MB 
2024-09-10 16:11:25.173 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:25 GMT 2024 - -- io.joern.x2cpg.passes.base.AstLinkerPass is done ...                                 - 46 ms - 00h:00m:00s:46ms              - stats -> '0.00%', '0.00' MB, '3598.71' MB MAX => '0.00%', '0.00' MB
2024-09-10 16:11:25.177 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:25 GMT 2024 - -- io.joern.x2cpg.passes.base.ContainsEdgePass is invoked                                                                       - stats -> '0.00%', '47.98' MB, '3598.71' MB 
2024-09-10 16:11:25.326 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:25 GMT 2024 - -- io.joern.x2cpg.passes.base.ContainsEdgePass is done ...                              - 150 ms - 00h:00m:00s:150ms            - stats -> '0.00%', '0.00' MB, '3598.71' MB MAX => '0.00%', '0.00' MB
2024-09-10 16:11:25.331 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:25 GMT 2024 - -- io.joern.x2cpg.passes.base.TypeRefPass is invoked                                                                            - stats -> '0.00%', '49.19' MB, '3598.71' MB 
2024-09-10 16:11:25.398 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:25 GMT 2024 - -- io.joern.x2cpg.passes.base.TypeRefPass is done ...                                   - 69 ms - 00h:00m:00s:69ms              - stats -> '0.00%', '0.00' MB, '3598.71' MB MAX => '0.00%', '0.00' MB
2024-09-10 16:11:25.403 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:25 GMT 2024 - -- io.joern.x2cpg.passes.base.TypeEvalPass is invoked                                                                           - stats -> '0.00%', '50.21' MB, '3598.71' MB 
2024-09-10 16:11:25.622 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:25 GMT 2024 - -- io.joern.x2cpg.passes.base.TypeEvalPass is done ...                                  - 221 ms - 00h:00m:00s:221ms            - stats -> '0.00%', '0.00' MB, '3598.71' MB MAX => '0.00%', '0.00' MB
2024-09-10 16:11:25.630 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:25 GMT 2024 - -- io.shiftleft.semanticcpg.Overlays$$anon$1 is invoked                                                                         - stats -> '0.00%', '52.88' MB, '3598.71' MB 
2024-09-10 16:11:25.644 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:25 GMT 2024 - -- io.shiftleft.semanticcpg.Overlays$$anon$1 is done ...                                - 19 ms - 00h:00m:00s:19ms              - stats -> '0.00%', '52.88' MB, '3598.71' MB MAX => '0.00%', '52.88' MB
2024-09-10 16:11:25.654 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:25 GMT 2024 - -- io.joern.x2cpg.passes.controlflow.CfgCreationPass is invoked                                                                 - stats -> '0.00%', '52.99' MB, '3598.71' MB 
2024-09-10 16:11:26.121 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:26 GMT 2024 - -- io.joern.x2cpg.passes.controlflow.CfgCreationPass is done ...                        - 467 ms - 00h:00m:00s:467ms            - stats -> '0.00%', '0.00' MB, '3598.71' MB MAX => '0.00%', '0.00' MB
2024-09-10 16:11:26.133 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:26 GMT 2024 - -- io.joern.x2cpg.passes.controlflow.cfgdominator.CfgDominatorPass is invoked                                                   - stats -> '0.00%', '60.28' MB, '3598.71' MB 
2024-09-10 16:11:26.852 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:26 GMT 2024 - -- io.joern.x2cpg.passes.controlflow.cfgdominator.CfgDominatorPass is done ...          - 722 ms - 00h:00m:00s:722ms            - stats -> '0.00%', '65.61' MB, '3598.71' MB MAX => '0.00%', '65.61' MB
2024-09-10 16:11:26.856 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:26 GMT 2024 - -- io.joern.x2cpg.passes.controlflow.codepencegraph.CdgPass is invoked                                                          - stats -> '0.00%', '71.76' MB, '3598.71' MB 
2024-09-10 16:11:27.007 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:27 GMT 2024 - -- io.joern.x2cpg.passes.controlflow.codepencegraph.CdgPass is done ...                 - 150 ms - 00h:00m:00s:150ms            - stats -> '0.00%', '0.00' MB, '3598.71' MB MAX => '0.00%', '0.00' MB
2024-09-10 16:11:27.009 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:27 GMT 2024 - -- io.shiftleft.semanticcpg.Overlays$$anon$1 is invoked                                                                         - stats -> '0.00%', '52.88' MB, '3598.71' MB MAX => '0.00%', '52.88' MB
2024-09-10 16:11:27.014 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:27 GMT 2024 - -- io.shiftleft.semanticcpg.Overlays$$anon$1 is done ...                                - 5 ms - 00h:00m:00s:05ms               - stats -> '0.00%', '0.00' MB, '3598.71' MB MAX => '0.00%', '0.00' MB
2024-09-10 16:11:27.031 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:27 GMT 2024 - -- io.joern.x2cpg.passes.typerelations.TypeHierarchyPass is invoked                                                             - stats -> '0.00%', '73.89' MB, '3598.71' MB 
2024-09-10 16:11:27.059 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:27 GMT 2024 - -- io.joern.x2cpg.passes.typerelations.TypeHierarchyPass is done ...                    - 29 ms - 00h:00m:00s:29ms              - stats -> '0.00%', '0.00' MB, '3598.71' MB MAX => '0.00%', '0.00' MB
2024-09-10 16:11:27.063 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:27 GMT 2024 - -- io.joern.x2cpg.passes.typerelations.AliasLinkerPass is invoked                                                               - stats -> '0.00%', '74.69' MB, '3598.71' MB 
2024-09-10 16:11:27.071 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:27 GMT 2024 - -- io.joern.x2cpg.passes.typerelations.AliasLinkerPass is done ...                      - 9 ms - 00h:00m:00s:09ms               - stats -> '0.00%', '0.00' MB, '3598.71' MB MAX => '0.00%', '0.00' MB
2024-09-10 16:11:27.074 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:27 GMT 2024 - -- io.joern.x2cpg.passes.typerelations.FieldAccessLinkerPass is invoked                                                         - stats -> '0.00%', '74.69' MB, '3598.71' MB 
2024-09-10 16:11:27.383 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:27 GMT 2024 - -- io.joern.x2cpg.passes.typerelations.FieldAccessLinkerPass is done ...                - 310 ms - 00h:00m:00s:310ms            - stats -> '0.00%', '0.00' MB, '3598.71' MB MAX => '0.00%', '0.00' MB
2024-09-10 16:11:27.386 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:27 GMT 2024 - -- io.shiftleft.semanticcpg.Overlays$$anon$1 is invoked                                                                         - stats -> '0.00%', '0.00' MB, '3598.71' MB MAX => '0.00%', '0.00' MB
2024-09-10 16:11:27.390 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:27 GMT 2024 - -- io.shiftleft.semanticcpg.Overlays$$anon$1 is done ...                                - 5 ms - 00h:00m:00s:05ms               - stats -> '0.00%', '0.00' MB, '3598.71' MB MAX => '0.00%', '0.00' MB
2024-09-10 16:11:27.409 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:27 GMT 2024 - -- io.joern.x2cpg.passes.callgraph.MethodRefLinker is invoked                                                                   - stats -> '0.00%', '78.05' MB, '3598.71' MB 
2024-09-10 16:11:27.421 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:27 GMT 2024 - -- io.joern.x2cpg.passes.callgraph.MethodRefLinker is done ...                          - 14 ms - 00h:00m:00s:14ms              - stats -> '0.00%', '0.00' MB, '3598.71' MB MAX => '0.00%', '0.00' MB
2024-09-10 16:11:27.424 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:27 GMT 2024 - -- io.joern.x2cpg.passes.callgraph.StaticCallLinker is invoked                                                                  - stats -> '0.00%', '78.45' MB, '3598.71' MB 
2024-09-10 16:11:27.473 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:27 GMT 2024 - -- io.joern.x2cpg.passes.callgraph.StaticCallLinker is done ...                         - 49 ms - 00h:00m:00s:49ms              - stats -> '0.00%', '0.00' MB, '3598.71' MB MAX => '0.00%', '0.00' MB
2024-09-10 16:11:27.477 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:27 GMT 2024 - -- io.joern.x2cpg.passes.callgraph.DynamicCallLinker is invoked                                                                 - stats -> '0.00%', '79.62' MB, '3598.71' MB 
2024-09-10 16:11:27.541 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:27 GMT 2024 - -- io.joern.x2cpg.passes.callgraph.DynamicCallLinker is done ...                        - 65 ms - 00h:00m:00s:65ms              - stats -> '0.00%', '0.00' MB, '3598.71' MB MAX => '0.00%', '0.00' MB
2024-09-10 16:11:27.543 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:27 GMT 2024 - -- io.shiftleft.semanticcpg.Overlays$$anon$1 is invoked                                                                         - stats -> '0.00%', '0.00' MB, '3598.71' MB MAX => '0.00%', '0.00' MB
2024-09-10 16:11:27.545 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:27 GMT 2024 - -- io.shiftleft.semanticcpg.Overlays$$anon$1 is done ...                                - 2 ms - 00h:00m:00s:02ms               - stats -> '0.00%', '0.00' MB, '3598.71' MB MAX => '0.00%', '0.00' MB
2024-09-10 16:11:27.547 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:27 GMT 2024 - Applying default overlays is done ...                                                   - 2751 ms - 00h:00m:02s:751ms           - stats -> '0.00%', '59.25' MB, '3598.71' MB MAX => '0.00%', '65.61' MB
2024-09-10 16:11:27.551 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:27 GMT 2024 - overriden overlay Processing is invoked                                                                                         - stats -> '0.00%', '80.49' MB, '3598.71' MB 
2024-09-10 16:11:27.554 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:27 GMT 2024 - overriden overlay Processing is done ...                                                - 4 ms - 00h:00m:00s:04ms               - stats -> '0.00%', '0.00' MB, '3598.71' MB MAX => '0.00%', '0.00' MB
2024-09-10 16:11:27.556 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:27 GMT 2024 - Privado source passes is invoked                                                                                                - stats -> '0.00%', '80.49' MB, '3598.71' MB 
2024-09-10 16:11:27.638 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:27 GMT 2024 - -- ai.privado.passes.HTMLParserPass is invoked                                                                                  - stats -> '0.00%', '81.90' MB, '3598.71' MB 
2024-09-10 16:11:27.675 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:27 GMT 2024 - -- ai.privado.passes.HTMLParserPass is done ...                                         - 42 ms - 00h:00m:00s:42ms              - stats -> '0.00%', '0.00' MB, '3598.71' MB MAX => '0.00%', '0.00' MB
2024-09-10 16:11:27.676 DEBUG ai.privado.passes.HTMLParserPass PrivadoParallelCpgPass.scala:39: Pass executed successfully
2024-09-10 16:11:27.679 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:27 GMT 2024 - -- ai.privado.passes.PropertyParserPass is invoked                                                                              - stats -> '0.00%', '82.31' MB, '3598.71' MB 
2024-09-10 16:11:27.812 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:27 GMT 2024 - -- ai.privado.passes.PropertyParserPass is done ...                                     - 131 ms - 00h:00m:00s:131ms            - stats -> '0.00%', '82.31' MB, '3598.71' MB MAX => '0.00%', '82.31' MB
2024-09-10 16:11:27.813 DEBUG ai.privado.passes.PropertyParserPass PrivadoParallelCpgPass.scala:39: Pass executed successfully
2024-09-10 16:11:27.816 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:27 GMT 2024 - -- ai.privado.languageEngine.javascript.passes.config.JSPropertyLinkerPass is invoked                                           - stats -> '0.00%', '83.78' MB, '3598.71' MB 
2024-09-10 16:11:27.980 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:27 GMT 2024 - -- ai.privado.languageEngine.javascript.passes.config.JSPropertyLinkerPass is done ...  - 165 ms - 00h:00m:00s:165ms            - stats -> '0.00%', '0.00' MB, '3598.71' MB MAX => '0.00%', '0.00' MB
2024-09-10 16:11:27.982 DEBUG ai.privado.languageEngine.javascript.passes.config.JSPropertyLinkerPass PrivadoParallelCpgPass.scala:39: Pass executed successfully
2024-09-10 16:11:27.985 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:27 GMT 2024 - -- ai.privado.passes.SQLParser is invoked                                                                                       - stats -> '0.00%', '89.92' MB, '3598.71' MB 
2024-09-10 16:11:28.017 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:28 GMT 2024 - -- ai.privado.passes.SQLParser is done ...                                              - 33 ms - 00h:00m:00s:33ms              - stats -> '0.00%', '0.00' MB, '3598.71' MB MAX => '0.00%', '0.00' MB
2024-09-10 16:11:28.018 DEBUG ai.privado.passes.SQLParser PrivadoParallelCpgPass.scala:39: Pass executed successfully
2024-09-10 16:11:28.021 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:28 GMT 2024 - -- ai.privado.passes.DBTParserPass is invoked                                                                                   - stats -> '0.00%', '90.26' MB, '3598.71' MB 
2024-09-10 16:11:28.046 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:28 GMT 2024 - -- ai.privado.passes.DBTParserPass is done ...                                          - 26 ms - 00h:00m:00s:26ms              - stats -> '0.00%', '0.00' MB, '3598.71' MB MAX => '0.00%', '0.00' MB
2024-09-10 16:11:28.047 DEBUG ai.privado.passes.DBTParserPass PrivadoParallelCpgPass.scala:39: Pass executed successfully
2024-09-10 16:11:28.072 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:28 GMT 2024 - -- ai.privado.passes.AndroidXmlParserPass is invoked                                                                            - stats -> '0.00%', '90.29' MB, '3598.71' MB 
2024-09-10 16:11:28.104 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:28 GMT 2024 - -- ai.privado.passes.AndroidXmlParserPass is done ...                                   - 54 ms - 00h:00m:00s:54ms              - stats -> '0.00%', '0.00' MB, '3598.71' MB MAX => '0.00%', '0.00' MB
2024-09-10 16:11:28.105 DEBUG ai.privado.passes.AndroidXmlParserPass PrivadoParallelCpgPass.scala:39: Pass executed successfully
2024-09-10 16:11:28.107 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:28 GMT 2024 - Privado source passes is done ...                                                       - 551 ms - 00h:00m:00s:551ms            - stats -> '0.00%', '82.31' MB, '3598.71' MB MAX => '0.00%', '82.31' MB
2024-09-10 16:11:28.110 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:28 GMT 2024 - Run oss data flow is invoked                                                                                                    - stats -> '0.00%', '37.17' MB, '3598.71' MB 
2024-09-10 16:11:28.111 INFO ai.privado.languageEngine.javascript.processor.JavascriptProcessor BaseProcessor.scala:119: Applying data flow overlay
2024-09-10 16:11:28.160 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:28 GMT 2024 - -- io.joern.dataflowengineoss.passes.reachingdef.ReachingDefPass is invoked                                                     - stats -> '0.00%', '37.89' MB, '3598.71' MB 
2024-09-10 16:11:31.789 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:31 GMT 2024 - -- io.joern.dataflowengineoss.passes.reachingdef.ReachingDefPass is done ...            - 3625 ms - 00h:00m:03s:625ms           - stats -> '0.00%', '60.03' MB, '3598.71' MB MAX => '0.00%', '82.12' MB
2024-09-10 16:11:31.792 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:31 GMT 2024 - -- io.shiftleft.semanticcpg.Overlays$$anon$1 is invoked                                                                         - stats -> '0.00%', '0.00' MB, '3598.71' MB MAX => '0.00%', '0.00' MB
2024-09-10 16:11:31.797 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:31 GMT 2024 - -- io.shiftleft.semanticcpg.Overlays$$anon$1 is done ...                                - 5 ms - 00h:00m:00s:05ms               - stats -> '0.00%', '0.00' MB, '3598.71' MB MAX => '0.00%', '0.00' MB
2024-09-10 16:11:31.799 INFO ai.privado.languageEngine.javascript.processor.JavascriptProcessor BaseProcessor.scala:126: =====================
2024-09-10 16:11:31.874 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:31 GMT 2024 - -- io.joern.jssrc2cpg.passes.JavaScriptInheritanceNamePass is invoked                                                           - stats -> '0.00%', '46.63' MB, '3598.71' MB 
2024-09-10 16:11:31.950 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:31 GMT 2024 - -- io.joern.jssrc2cpg.passes.JavaScriptInheritanceNamePass is done ...                  - 80 ms - 00h:00m:00s:80ms              - stats -> '0.00%', '0.00' MB, '3598.71' MB MAX => '0.00%', '0.00' MB
2024-09-10 16:11:31.954 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:31 GMT 2024 - -- io.joern.jssrc2cpg.passes.ConstClosurePass is invoked                                                                        - stats -> '0.00%', '48.05' MB, '3598.71' MB 
2024-09-10 16:11:32.065 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:32 GMT 2024 - -- io.joern.jssrc2cpg.passes.ConstClosurePass is done ...                               - 110 ms - 00h:00m:00s:110ms            - stats -> '0.00%', '0.00' MB, '3598.71' MB MAX => '0.00%', '0.00' MB
2024-09-10 16:11:32.071 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:32 GMT 2024 - -- io.joern.jssrc2cpg.passes.JavaScriptImportResolverPass is invoked                                                            - stats -> '0.00%', '49.56' MB, '3598.71' MB 
2024-09-10 16:11:32.416 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:32 GMT 2024 - -- io.joern.jssrc2cpg.passes.JavaScriptImportResolverPass is done ...                   - 347 ms - 00h:00m:00s:347ms            - stats -> '0.00%', '0.00' MB, '3598.71' MB MAX => '0.00%', '0.00' MB
2024-09-10 16:11:32.421 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:32 GMT 2024 - -- io.joern.jssrc2cpg.passes.JavaScriptTypeRecovery is invoked                                                                  - stats -> '0.00%', '55.81' MB, '3598.71' MB 
2024-09-10 16:11:35.819 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:35 GMT 2024 - -- io.joern.jssrc2cpg.passes.JavaScriptTypeRecovery is done ...                         - 3307 ms - 00h:00m:03s:307ms           - stats -> '0.00%', '73.28' MB, '3598.71' MB MAX => '0.00%', '83.22' MB
2024-09-10 16:11:35.835 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:35 GMT 2024 - -- io.joern.jssrc2cpg.passes.JavaScriptTypeRecovery is invoked                                                                  - stats -> '0.00%', '73.28' MB, '3598.71' MB MAX => '0.00%', '83.22' MB
2024-09-10 16:11:36.334 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:36 GMT 2024 - -- io.joern.jssrc2cpg.passes.JavaScriptTypeRecovery is done ...                         - 497 ms - 00h:00m:00s:497ms            - stats -> '0.00%', '0.00' MB, '3598.71' MB MAX => '0.00%', '0.00' MB
2024-09-10 16:11:36.346 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:36 GMT 2024 - -- io.joern.jssrc2cpg.passes.JavaScriptTypeHintCallLinker is invoked                                                            - stats -> '0.00%', '105.49' MB, '3598.71' MB 
2024-09-10 16:11:36.760 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:36 GMT 2024 - -- io.joern.jssrc2cpg.passes.JavaScriptTypeHintCallLinker is done ...                   - 419 ms - 00h:00m:00s:419ms            - stats -> '0.00%', '0.00' MB, '3598.71' MB MAX => '0.00%', '0.00' MB
2024-09-10 16:11:36.764 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:36 GMT 2024 - -- io.joern.x2cpg.passes.callgraph.NaiveCallLinker is invoked                                                                   - stats -> '0.00%', '112.75' MB, '3598.71' MB 
2024-09-10 16:11:36.796 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:36 GMT 2024 - -- io.joern.x2cpg.passes.callgraph.NaiveCallLinker is done ...                          - 33 ms - 00h:00m:00s:33ms              - stats -> '0.00%', '112.75' MB, '3598.71' MB MAX => '0.00%', '112.75' MB
2024-09-10 16:11:36.797 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:36 GMT 2024 - Run oss data flow is done ...                                                           - 8688 ms - 00h:00m:08s:688ms           - stats -> '0.00%', '71.24' MB, '3598.71' MB MAX => '0.00%', '112.75' MB
2024-09-10 16:11:36.800 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:36 GMT 2024 - Tagging ... is invoked                                                                                                          - stats -> '0.00%', '113.43' MB, '3598.71' MB 
2024-09-10 16:11:36.811 INFO ai.privado.languageEngine.javascript.tagger.PrivadoTagger PrivadoTagger.scala:63: Starting tagging
2024-09-10 16:11:36.817 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:36 GMT 2024 - -- ai.privado.tagger.source.DEDTagger is invoked                                                                                - stats -> '0.00%', '113.43' MB, '3598.71' MB 
2024-09-10 16:11:36.820 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:36 GMT 2024 - -- ai.privado.tagger.source.DEDTagger is done ...                                       - 4 ms - 00h:00m:00s:04ms               - stats -> '0.00%', '0.00' MB, '3598.71' MB MAX => '0.00%', '0.00' MB
2024-09-10 16:11:36.821 DEBUG ai.privado.tagger.source.DEDTagger PrivadoParallelCpgPass.scala:39: Pass executed successfully
2024-09-10 16:11:36.830 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:36 GMT 2024 - -- ai.privado.languageEngine.javascript.tagger.source.LiteralTagger is invoked                                                  - stats -> '0.00%', '113.72' MB, '3598.71' MB 
2024-09-10 16:11:36.912 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:36 GMT 2024 - -- ai.privado.languageEngine.javascript.tagger.source.LiteralTagger is done ...         - 82 ms - 00h:00m:00s:82ms              - stats -> '0.00%', '0.00' MB, '3598.71' MB MAX => '0.00%', '0.00' MB
2024-09-10 16:11:36.914 DEBUG ai.privado.languageEngine.javascript.tagger.source.LiteralTagger PrivadoParallelCpgPass.scala:39: Pass executed successfully
2024-09-10 16:11:36.925 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:36 GMT 2024 - -- ai.privado.languageEngine.javascript.tagger.source.IdentifierTagger is invoked                                               - stats -> '0.00%', '115.23' MB, '3598.71' MB 
2024-09-10 16:11:38.460 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:38 GMT 2024 - -- ai.privado.languageEngine.javascript.tagger.source.IdentifierTagger is done ...      - 1535 ms - 00h:00m:01s:535ms           - stats -> '0.00%', '69.48' MB, '3598.71' MB MAX => '0.00%', '69.48' MB
2024-09-10 16:11:38.461 DEBUG ai.privado.languageEngine.javascript.tagger.source.IdentifierTagger PrivadoParallelCpgPass.scala:39: Pass executed successfully
2024-09-10 16:11:38.469 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:38 GMT 2024 - -- ai.privado.tagger.source.SqlQueryTagger is invoked                                                                           - stats -> '0.00%', '66.83' MB, '3598.71' MB 
2024-09-10 16:11:38.520 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:38 GMT 2024 - -- ai.privado.tagger.source.SqlQueryTagger is done ...                                  - 52 ms - 00h:00m:00s:52ms              - stats -> '0.00%', '0.00' MB, '3598.71' MB MAX => '0.00%', '0.00' MB
2024-09-10 16:11:38.521 DEBUG ai.privado.tagger.source.SqlQueryTagger PrivadoParallelCpgPass.scala:39: Pass executed successfully
2024-09-10 16:11:39.064 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:39 GMT 2024 - -- ai.privado.languageEngine.javascript.tagger.sink.RegularSinkTagger is invoked                                                - stats -> '0.00%', '72.70' MB, '3598.71' MB 
2024-09-10 16:11:39.370 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:39 GMT 2024 - -- ai.privado.languageEngine.javascript.tagger.sink.RegularSinkTagger is done ...       - 308 ms - 00h:00m:00s:308ms            - stats -> '0.00%', '0.00' MB, '3598.71' MB MAX => '0.00%', '0.00' MB
2024-09-10 16:11:39.371 DEBUG ai.privado.languageEngine.javascript.tagger.sink.RegularSinkTagger PrivadoParallelCpgPass.scala:39: Pass executed successfully
2024-09-10 16:11:39.388 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:39 GMT 2024 - -- ai.privado.tagger.sink.api.InferenceAPIEndpointTagger is invoked                                                             - stats -> '0.00%', '39.48' MB, '3598.71' MB 
2024-09-10 16:11:39.396 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:39 GMT 2024 - -- ai.privado.tagger.sink.api.InferenceAPIEndpointTagger is done ...                    - 11 ms - 00h:00m:00s:11ms              - stats -> '0.00%', '0.00' MB, '3598.71' MB MAX => '0.00%', '0.00' MB
2024-09-10 16:11:39.397 DEBUG ai.privado.tagger.sink.api.InferenceAPIEndpointTagger PrivadoParallelCpgPass.scala:39: Pass executed successfully
2024-09-10 16:11:39.825 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:39 GMT 2024 - -- ai.privado.tagger.sink.api.APISinkByMethodFullNameTagger is invoked                                                          - stats -> '0.00%', '46.94' MB, '3598.71' MB 
2024-09-10 16:11:39.828 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:39 GMT 2024 - -- ai.privado.tagger.sink.api.APISinkByMethodFullNameTagger is done ...                 - 7 ms - 00h:00m:00s:07ms               - stats -> '0.00%', '0.00' MB, '3598.71' MB MAX => '0.00%', '0.00' MB
2024-09-10 16:11:39.828 DEBUG ai.privado.tagger.sink.api.APISinkByMethodFullNameTagger PrivadoSimpleCpgPass.scala:39: Pass executed successfully
2024-09-10 16:11:39.978 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:39 GMT 2024 - -- ai.privado.languageEngine.javascript.tagger.sink.JSAPITagger is invoked                                                      - stats -> '0.00%', '53.23' MB, '3598.71' MB 
2024-09-10 16:11:44.734 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:44 GMT 2024 - -- ai.privado.languageEngine.javascript.tagger.sink.JSAPITagger is done ...             - 4752 ms - 00h:00m:04s:752ms           - stats -> '0.00%', '128.45' MB, '3598.71' MB MAX => '0.00%', '143.05' MB
2024-09-10 16:11:44.737 DEBUG ai.privado.languageEngine.javascript.tagger.sink.JSAPITagger PrivadoParallelCpgPass.scala:39: Pass executed successfully
2024-09-10 16:11:45.177 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:45 GMT 2024 - -- ai.privado.languageEngine.javascript.tagger.sink.GraphqlAPITagger is invoked                                                 - stats -> '0.00%', '47.55' MB, '3598.71' MB 
2024-09-10 16:11:45.202 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:45 GMT 2024 - -- ai.privado.languageEngine.javascript.tagger.sink.GraphqlAPITagger is done ...        - 30 ms - 00h:00m:00s:30ms              - stats -> '0.00%', '0.00' MB, '3598.71' MB MAX => '0.00%', '0.00' MB
2024-09-10 16:11:45.203 DEBUG ai.privado.languageEngine.javascript.tagger.sink.GraphqlAPITagger PrivadoParallelCpgPass.scala:39: Pass executed successfully
2024-09-10 16:11:45.215 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:45 GMT 2024 - -- ai.privado.languageEngine.javascript.passes.read.GraphqlQueryParserPass is invoked                                           - stats -> '0.00%', '48.60' MB, '3598.71' MB 
2024-09-10 16:11:45.225 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:45 GMT 2024 - -- ai.privado.languageEngine.javascript.passes.read.GraphqlQueryParserPass is done ...  - 11 ms - 00h:00m:00s:11ms              - stats -> '0.00%', '0.00' MB, '3598.71' MB MAX => '0.00%', '0.00' MB
2024-09-10 16:11:45.225 DEBUG ai.privado.languageEngine.javascript.passes.read.GraphqlQueryParserPass PrivadoParallelCpgPass.scala:39: Pass executed successfully
2024-09-10 16:11:45.236 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:45 GMT 2024 - -- ai.privado.languageEngine.javascript.config.JSDBConfigTagger is invoked                                                      - stats -> '0.00%', '48.60' MB, '3598.71' MB 
2024-09-10 16:11:45.245 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:45 GMT 2024 - -- ai.privado.languageEngine.javascript.config.JSDBConfigTagger is done ...             - 13 ms - 00h:00m:00s:13ms              - stats -> '0.00%', '0.00' MB, '3598.71' MB MAX => '0.00%', '0.00' MB
2024-09-10 16:11:45.245 DEBUG ai.privado.languageEngine.javascript.config.JSDBConfigTagger PrivadoSimpleCpgPass.scala:39: Pass executed successfully
2024-09-10 16:11:45.251 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:45 GMT 2024 - -- ai.privado.tagger.collection.WebFormsCollectionTagger is invoked                                                             - stats -> '0.00%', '48.60' MB, '3598.71' MB 
2024-09-10 16:11:45.274 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:45 GMT 2024 - -- ai.privado.tagger.collection.WebFormsCollectionTagger is done ...                    - 25 ms - 00h:00m:00s:25ms              - stats -> '0.00%', '0.00' MB, '3598.71' MB MAX => '0.00%', '0.00' MB
2024-09-10 16:11:45.277 DEBUG ai.privado.tagger.collection.WebFormsCollectionTagger PrivadoParallelCpgPass.scala:39: Pass executed successfully
2024-09-10 16:11:45.288 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:45 GMT 2024 - -- ai.privado.languageEngine.javascript.tagger.collection.CollectionTagger is invoked                                           - stats -> '0.00%', '50.70' MB, '3598.71' MB 
2024-09-10 16:11:45.992 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:45 GMT 2024 - -- ai.privado.languageEngine.javascript.tagger.collection.CollectionTagger is done ...  - 703 ms - 00h:00m:00s:703ms            - stats -> '0.00%', '95.38' MB, '3598.71' MB MAX => '0.00%', '95.38' MB
2024-09-10 16:11:45.994 DEBUG ai.privado.languageEngine.javascript.tagger.collection.CollectionTagger PrivadoParallelCpgPass.scala:39: Pass executed successfully
2024-09-10 16:11:46.032 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:46 GMT 2024 - -- ai.privado.tagger.source.AndroidXmlPermissionTagger is invoked                                                               - stats -> '0.00%', '124.85' MB, '3598.71' MB 
2024-09-10 16:11:46.048 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:46 GMT 2024 - -- ai.privado.tagger.source.AndroidXmlPermissionTagger is done ...                      - 18 ms - 00h:00m:00s:18ms              - stats -> '0.00%', '0.00' MB, '3598.71' MB MAX => '0.00%', '0.00' MB
2024-09-10 16:11:46.049 DEBUG ai.privado.tagger.source.AndroidXmlPermissionTagger PrivadoParallelCpgPass.scala:39: Pass executed successfully
2024-09-10 16:11:46.050 INFO ai.privado.languageEngine.javascript.tagger.PrivadoTagger PrivadoTagger.scala:89: Done with tagging
2024-09-10 16:11:46.051 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:46 GMT 2024 - Tagging ... is done ...                                                                 - 9252 ms - 00h:00m:09s:252ms           - stats -> '0.00%', '99.19' MB, '3598.71' MB MAX => '0.00%', '143.05' MB
2024-09-10 16:11:46.053 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:46 GMT 2024 - Finding data flows ... is invoked                                                                                               - stats -> '0.00%', '126.34' MB, '3598.71' MB 
2024-09-10 16:11:46.058 INFO ai.privado.dataflow.Dataflow Dataflow.scala:72: Generating dataflow
2024-09-10 16:11:46.118 DEBUG ai.privado.languageEngine.javascript.JavascriptSemanticGenerator$ JavascriptSemanticGenerator.scala:53: 
Custom customSinkSemantics semantics
2024-09-10 16:11:46.120 DEBUG ai.privado.languageEngine.javascript.JavascriptSemanticGenerator$ JavascriptSemanticGenerator.scala:54: "@amplitude/core:Amplitude:send" 0->-1 0->0 1->-1 1->1 2->-1 2->2
2024-09-10 16:11:46.121 DEBUG ai.privado.languageEngine.javascript.JavascriptSemanticGenerator$ JavascriptSemanticGenerator.scala:54: "@sendgrid/mail:send" 0->-1 0->0 1->-1 1->1 2->-1 2->2
2024-09-10 16:11:46.121 DEBUG ai.privado.languageEngine.javascript.JavascriptSemanticGenerator$ JavascriptSemanticGenerator.scala:54: "@sendgrid/mail:send:<returnValue>:then" 0->-1 0->0 1->-1 1->1 2->-1 2->2 3->-1 3->3
2024-09-10 16:11:46.122 DEBUG ai.privado.languageEngine.javascript.JavascriptSemanticGenerator$ JavascriptSemanticGenerator.scala:54: "@sendgrid/mail:setApiKey" 0->-1 0->0 1->-1 1->1 2->-1 2->2
2024-09-10 16:11:46.122 DEBUG ai.privado.languageEngine.javascript.JavascriptSemanticGenerator$ JavascriptSemanticGenerator.scala:54: "@sentry/core:Sentry:upload" 0->-1 0->0 1->-1 1->1 2->-1 2->2
2024-09-10 16:11:46.123 DEBUG ai.privado.languageEngine.javascript.JavascriptSemanticGenerator$ JavascriptSemanticGenerator.scala:54: "@slack/web-api:<member>(chat):postMessage" 0->-1 0->0 1->-1 1->1 2->-1 2->2
2024-09-10 16:11:46.123 DEBUG ai.privado.languageEngine.javascript.JavascriptSemanticGenerator$ JavascriptSemanticGenerator.scala:54: "__whatwg.console:debug" 0->-1 0->0 1->-1 1->1 2->-1 2->2
2024-09-10 16:11:46.124 DEBUG ai.privado.languageEngine.javascript.JavascriptSemanticGenerator$ JavascriptSemanticGenerator.scala:54: "__whatwg.console:error" 0->-1 0->0 1->-1 1->1 2->-1 2->2 3->-1 3->3
2024-09-10 16:11:46.124 DEBUG ai.privado.languageEngine.javascript.JavascriptSemanticGenerator$ JavascriptSemanticGenerator.scala:54: "__whatwg.console:info" 0->-1 0->0 1->-1 1->1 2->-1 2->2 3->-1 3->3
2024-09-10 16:11:46.125 DEBUG ai.privado.languageEngine.javascript.JavascriptSemanticGenerator$ JavascriptSemanticGenerator.scala:54: "__whatwg.console:log" 0->-1 0->0 1->-1 1->1 2->-1 2->2 3->-1 3->3
2024-09-10 16:11:46.126 DEBUG ai.privado.languageEngine.javascript.JavascriptSemanticGenerator$ JavascriptSemanticGenerator.scala:54: "__whatwg.console:warn" 0->-1 0->0 1->-1 1->1 2->-1 2->2
2024-09-10 16:11:46.127 DEBUG ai.privado.languageEngine.javascript.JavascriptSemanticGenerator$ JavascriptSemanticGenerator.scala:54: "axios:axios:create" 0->-1 0->0 1->-1 1->1 2->-1 2->2
2024-09-10 16:11:46.127 DEBUG ai.privado.languageEngine.javascript.JavascriptSemanticGenerator$ JavascriptSemanticGenerator.scala:54: "axios:axios:create:<returnValue>:delete" 0->-1 0->0 1->-1 1->1 2->-1 2->2 3->-1 3->3
2024-09-10 16:11:46.128 DEBUG ai.privado.languageEngine.javascript.JavascriptSemanticGenerator$ JavascriptSemanticGenerator.scala:54: "axios:axios:create:<returnValue>:get" 0->-1 0->0 1->-1 1->1 2->-1 2->2 3->-1 3->3
2024-09-10 16:11:46.128 DEBUG ai.privado.languageEngine.javascript.JavascriptSemanticGenerator$ JavascriptSemanticGenerator.scala:54: "axios:axios:create:<returnValue>:post" 0->-1 0->0 1->-1 1->1 2->-1 2->2 3->-1 3->3 4->-1 4->4
2024-09-10 16:11:46.129 DEBUG ai.privado.languageEngine.javascript.JavascriptSemanticGenerator$ JavascriptSemanticGenerator.scala:54: "axios:axios:create:<returnValue>:put" 0->-1 0->0 1->-1 1->1 2->-1 2->2 3->-1 3->3 4->-1 4->4
2024-09-10 16:11:46.129 DEBUG ai.privado.languageEngine.javascript.JavascriptSemanticGenerator$ JavascriptSemanticGenerator.scala:54: "axios:axios:post" 0->-1 0->0 1->-1 1->1 2->-1 2->2 3->-1 3->3
2024-09-10 16:11:46.130 DEBUG ai.privado.languageEngine.javascript.JavascriptSemanticGenerator$ JavascriptSemanticGenerator.scala:54: "axios:get" 0->-1 0->0 1->-1 1->1 2->-1 2->2 3->-1 3->3
2024-09-10 16:11:46.130 DEBUG ai.privado.languageEngine.javascript.JavascriptSemanticGenerator$ JavascriptSemanticGenerator.scala:54: "bunyan:createLogger" 0->-1 0->0 1->-1 1->1 2->-1 2->2
2024-09-10 16:11:46.130 DEBUG ai.privado.languageEngine.javascript.JavascriptSemanticGenerator$ JavascriptSemanticGenerator.scala:54: "bunyan:createLogger:<returnValue>:error" 0->-1 0->0 1->-1 1->1 2->-1 2->2
2024-09-10 16:11:46.131 DEBUG ai.privado.languageEngine.javascript.JavascriptSemanticGenerator$ JavascriptSemanticGenerator.scala:54: "bunyan:createLogger:<returnValue>:info" 0->-1 0->0 1->-1 1->1 2->-1 2->2
2024-09-10 16:11:46.131 DEBUG ai.privado.languageEngine.javascript.JavascriptSemanticGenerator$ JavascriptSemanticGenerator.scala:54: "bunyan:createLogger:<returnValue>:warn" 0->-1 0->0 1->-1 1->1 2->-1 2->2
2024-09-10 16:11:46.132 DEBUG ai.privado.languageEngine.javascript.JavascriptSemanticGenerator$ JavascriptSemanticGenerator.scala:54: "cors" 0->-1 0->0 1->-1 1->1 2->-1 2->2
2024-09-10 16:11:46.132 DEBUG ai.privado.languageEngine.javascript.JavascriptSemanticGenerator$ JavascriptSemanticGenerator.scala:54: "fetch" 0->-1 0->0 1->-1 1->1
2024-09-10 16:11:46.133 DEBUG ai.privado.languageEngine.javascript.JavascriptSemanticGenerator$ JavascriptSemanticGenerator.scala:54: "googleapis:<member>(auth):GoogleAuth:<init>" 0->-1 0->0 1->-1 1->1 2->-1 2->2
2024-09-10 16:11:46.133 DEBUG ai.privado.languageEngine.javascript.JavascriptSemanticGenerator$ JavascriptSemanticGenerator.scala:54: "googleapis:drive" 0->-1 0->0 1->-1 1->1 2->-1 2->2 3->-1 3->3
2024-09-10 16:11:46.133 DEBUG ai.privado.languageEngine.javascript.JavascriptSemanticGenerator$ JavascriptSemanticGenerator.scala:54: "log4js:getLogger" 0->-1 0->0 1->-1 1->1 2->-1 2->2
2024-09-10 16:11:46.134 DEBUG ai.privado.languageEngine.javascript.JavascriptSemanticGenerator$ JavascriptSemanticGenerator.scala:54: "log4js:getLogger:<returnValue>:error" 0->-1 0->0 1->-1 1->1 2->-1 2->2
2024-09-10 16:11:46.134 DEBUG ai.privado.languageEngine.javascript.JavascriptSemanticGenerator$ JavascriptSemanticGenerator.scala:54: "log4js:getLogger:<returnValue>:info" 0->-1 0->0 1->-1 1->1 2->-1 2->2
2024-09-10 16:11:46.138 DEBUG ai.privado.languageEngine.javascript.JavascriptSemanticGenerator$ JavascriptSemanticGenerator.scala:54: "log4js:getLogger:<returnValue>:warn" 0->-1 0->0 1->-1 1->1 2->-1 2->2
2024-09-10 16:11:46.139 DEBUG ai.privado.languageEngine.javascript.JavascriptSemanticGenerator$ JavascriptSemanticGenerator.scala:54: "mysql:createConnection" 0->-1 0->0 1->-1 1->1 2->-1 2->2
2024-09-10 16:11:46.140 DEBUG ai.privado.languageEngine.javascript.JavascriptSemanticGenerator$ JavascriptSemanticGenerator.scala:54: "mysql:createConnection:<returnValue>:connect" 0->-1 0->0 1->-1 1->1 2->-1 2->2
2024-09-10 16:11:46.140 DEBUG ai.privado.languageEngine.javascript.JavascriptSemanticGenerator$ JavascriptSemanticGenerator.scala:54: "node:http:request" 0->-1 0->0 1->-1 1->1 2->-1 2->2 3->-1 3->3
2024-09-10 16:11:46.141 DEBUG ai.privado.languageEngine.javascript.JavascriptSemanticGenerator$ JavascriptSemanticGenerator.scala:54: "node:http:request:<returnValue>:on" 0->-1 0->0 1->-1 1->1 2->-1 2->2 3->-1 3->3
2024-09-10 16:11:46.142 DEBUG ai.privado.languageEngine.javascript.JavascriptSemanticGenerator$ JavascriptSemanticGenerator.scala:54: "node:http:request:<returnValue>:write" 0->-1 0->0 1->-1 1->1 2->-1 2->2
2024-09-10 16:11:46.142 DEBUG ai.privado.languageEngine.javascript.JavascriptSemanticGenerator$ JavascriptSemanticGenerator.scala:54: "pino:pino:<returnValue>:error" 0->-1 0->0 1->-1 1->1 2->-1 2->2
2024-09-10 16:11:46.144 DEBUG ai.privado.languageEngine.javascript.JavascriptSemanticGenerator$ JavascriptSemanticGenerator.scala:54: "pino:pino:<returnValue>:info" 0->-1 0->0 1->-1 1->1 2->-1 2->2
2024-09-10 16:11:46.145 DEBUG ai.privado.languageEngine.javascript.JavascriptSemanticGenerator$ JavascriptSemanticGenerator.scala:54: "pino:pino:<returnValue>:warn" 0->-1 0->0 1->-1 1->1 2->-1 2->2
2024-09-10 16:11:46.145 DEBUG ai.privado.languageEngine.javascript.JavascriptSemanticGenerator$ JavascriptSemanticGenerator.scala:54: "process:stdout:<returnValue>:<member>(stdout):write" 0->-1 0->0 1->-1 1->1 2->-1 2->2
2024-09-10 16:11:46.146 DEBUG ai.privado.languageEngine.javascript.JavascriptSemanticGenerator$ JavascriptSemanticGenerator.scala:54: "winston:winston:createLogger" 0->-1 0->0 1->-1 1->1 2->-1 2->2
2024-09-10 16:11:46.146 DEBUG ai.privado.languageEngine.javascript.JavascriptSemanticGenerator$ JavascriptSemanticGenerator.scala:54: "winston:winston:createLogger:<returnValue>:error" 0->-1 0->0 1->-1 1->1 2->-1 2->2 3->-1 3->3
2024-09-10 16:11:46.147 DEBUG ai.privado.languageEngine.javascript.JavascriptSemanticGenerator$ JavascriptSemanticGenerator.scala:54: "winston:winston:createLogger:<returnValue>:info" 0->-1 0->0 1->-1 1->1 2->-1 2->2
2024-09-10 16:11:46.147 DEBUG ai.privado.languageEngine.javascript.JavascriptSemanticGenerator$ JavascriptSemanticGenerator.scala:54: "winston:winston:createLogger:<returnValue>:warn" 0->-1 0->0 1->-1 1->1 2->-1 2->2
2024-09-10 16:11:46.148 DEBUG ai.privado.languageEngine.javascript.JavascriptSemanticGenerator$ JavascriptSemanticGenerator.scala:55: 
Custom semanticFromConfig semantics
2024-09-10 16:11:46.527 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:46 GMT 2024 - -- no of source nodes - 167
2024-09-10 16:11:46.529 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:46 GMT 2024 - -- no of sinks nodes - 99
2024-09-10 16:11:46.533 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:46 GMT 2024 - -- Finding flows is invoked                                                                                                     - stats -> '0.00%', '133.54' MB, '3598.71' MB 
2024-09-10 16:11:49.960 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:49 GMT 2024 - -- Finding flows is done ...                                                            - 3306 ms - 00h:00m:03s:306ms           - stats -> '0.00%', '169.03' MB, '3598.71' MB MAX => '0.00%', '193.52' MB
2024-09-10 16:11:49.966 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:49 GMT 2024 - -- Unique flows - 349
2024-09-10 16:11:49.970 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:49 GMT 2024 - -- Filtering flows 1 is invoked                                                                                                 - stats -> '0.00%', '194.54' MB, '3598.71' MB 
2024-09-10 16:11:50.023 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:625: Removed Flow due to 'this' tainting: bankProfile||bankProfile||this||this.bankAccountNumber||this.bankName||<operator>.formatString("Hello, my bankName is ", this.bankName, " and I'm ", this.bankAccountNumber, " years old.")||console.log(`Hello, my bankName is ${this.bankName} and I'm ${this.bankAccountNumber} years old.`)
2024-09-10 16:11:50.032 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:625: Removed Flow due to 'this' tainting: myMusician||myMusician||this||this.song||this.username||this||myMusician||myMusician||Amplitude.send(myMusician)
2024-09-10 16:11:50.037 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:625: Removed Flow due to 'this' tainting: _tmp_0||_tmp_0||new BankProfile('Alice', 25)||new BankProfile('Alice', 25)||bankProfile||bankProfile||bankProfile||bankProfile||this||this.bankAccountNumber||this.bankName||<operator>.formatString("Hello, my bankName is ", this.bankName, " and I'm ", this.bankAccountNumber, " years old.")||console.log(`Hello, my bankName is ${this.bankName} and I'm ${this.bankAccountNumber} years old.`)
2024-09-10 16:11:50.047 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:625: Removed Flow due to 'this' tainting: bankProfile||bankProfile||bankProfile||this||this.bankAccountNumber||this.bankName||<operator>.formatString("Hello, my bankName is ", this.bankName, " and I'm ", this.bankAccountNumber, " years old.")||console.log(`Hello, my bankName is ${this.bankName} and I'm ${this.bankAccountNumber} years old.`)
2024-09-10 16:11:50.050 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:625: Removed Flow due to 'this' tainting: bankProfile||bankProfile||this||this.bankAccountNumber||this.bankAccountNumber||this.bankName||<operator>.formatString("Bank Details for , ", this.bankName, "! You are now ", this.bankAccountNumber, " years old.")||console.log(`Bank Details for , ${this.bankName}! You are now ${this.bankAccountNumber} years old.`)
2024-09-10 16:11:50.051 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:625: Removed Flow due to 'this' tainting: this.bankAccountNumber||this.bankName||<operator>.formatString("Hello, my bankName is ", this.bankName, " and I'm ", this.bankAccountNumber, " years old.")||console.log(`Hello, my bankName is ${this.bankName} and I'm ${this.bankAccountNumber} years old.`)
2024-09-10 16:11:50.053 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:625: Removed Flow due to 'this' tainting: bankProfile||bankProfile||bankProfile||this||this.bankAccountNumber||this.bankAccountNumber||this.bankName||<operator>.formatString("Bank Details for , ", this.bankName, "! You are now ", this.bankAccountNumber, " years old.")||console.log(`Bank Details for , ${this.bankName}! You are now ${this.bankAccountNumber} years old.`)
2024-09-10 16:11:50.057 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:625: Removed Flow due to 'this' tainting: bankProfile||this||this.bankAccountNumber||this.bankName||<operator>.formatString("Hello, my bankName is ", this.bankName, " and I'm ", this.bankAccountNumber, " years old.")||console.log(`Hello, my bankName is ${this.bankName} and I'm ${this.bankAccountNumber} years old.`)
2024-09-10 16:11:50.062 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:625: Removed Flow due to 'this' tainting: myMusician||myMusician||this||this.song||this.username||<operator>.formatString("", this.username, " says ", this.song, "")||console.log(`${this.username} says ${this.song}`)
2024-09-10 16:11:50.063 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:625: Removed Flow due to 'this' tainting: bankProfile||this||this.bankAccountNumber||this.bankAccountNumber||this.bankName||<operator>.formatString("Bank Details for , ", this.bankName, "! You are now ", this.bankAccountNumber, " years old.")||console.log(`Bank Details for , ${this.bankName}! You are now ${this.bankAccountNumber} years old.`)
2024-09-10 16:11:50.210 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:625: Removed Flow due to 'this' tainting: this.bankAccountNumber||this.bankAccountNumber||this.bankName||<operator>.formatString("Bank Details for , ", this.bankName, "! You are now ", this.bankAccountNumber, " years old.")||console.log(`Bank Details for , ${this.bankName}! You are now ${this.bankAccountNumber} years old.`)
2024-09-10 16:11:50.219 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:625: Removed Flow due to 'this' tainting: bankProfile||bankProfile||bankProfile||bankProfile||this||this.bankAccountNumber||this.bankName||<operator>.formatString("Hello, my bankName is ", this.bankName, " and I'm ", this.bankAccountNumber, " years old.")||console.log(`Hello, my bankName is ${this.bankName} and I'm ${this.bankAccountNumber} years old.`)
2024-09-10 16:11:50.231 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:625: Removed Flow due to 'this' tainting: _tmp_0||new BankProfile('Alice', 25)||new BankProfile('Alice', 25)||bankProfile||bankProfile||bankProfile||bankProfile||this||this.bankAccountNumber||this.bankName||<operator>.formatString("Hello, my bankName is ", this.bankName, " and I'm ", this.bankAccountNumber, " years old.")||console.log(`Hello, my bankName is ${this.bankName} and I'm ${this.bankAccountNumber} years old.`)
2024-09-10 16:11:50.233 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:625: Removed Flow due to 'this' tainting: _tmp_0||new BankProfile('Alice', 25)||new BankProfile('Alice', 25)||bankProfile||bankProfile||bankProfile||this||this.bankAccountNumber||this.bankAccountNumber||this.bankName||<operator>.formatString("Bank Details for , ", this.bankName, "! You are now ", this.bankAccountNumber, " years old.")||console.log(`Bank Details for , ${this.bankName}! You are now ${this.bankAccountNumber} years old.`)
2024-09-10 16:11:50.242 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:625: Removed Flow due to 'this' tainting: _tmp_0||_tmp_0||new BankProfile('Alice', 25)||new BankProfile('Alice', 25)||bankProfile||bankProfile||bankProfile||this||this.bankAccountNumber||this.bankAccountNumber||this.bankName||<operator>.formatString("Bank Details for , ", this.bankName, "! You are now ", this.bankAccountNumber, " years old.")||console.log(`Bank Details for , ${this.bankName}! You are now ${this.bankAccountNumber} years old.`)
2024-09-10 16:11:50.246 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:625: Removed Flow due to 'this' tainting: this.bankAccountNumber||this.bankName||<operator>.formatString("Bank Details for , ", this.bankName, "! You are now ", this.bankAccountNumber, " years old.")||console.log(`Bank Details for , ${this.bankName}! You are now ${this.bankAccountNumber} years old.`)
2024-09-10 16:11:50.261 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:50 GMT 2024 - -- Filtering flows 1 is done ...                                                        - 292 ms - 00h:00m:00s:292ms            - stats -> '0.00%', '0.00' MB, '3598.71' MB MAX => '0.00%', '0.00' MB
2024-09-10 16:11:50.262 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:50 GMT 2024 - -- Unique flows - 333
2024-09-10 16:11:50.286 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:50 GMT 2024 - -- Filtering flows 2 is invoked                                                                                                 - stats -> '0.00%', '42.57' MB, '3598.71' MB 
2024-09-10 16:11:50.509 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:50.511 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:50.512 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||data|||data|||data.email|||data.email|||"User data updated" + data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob|||_tmp_37.data|||{
        event: "user_update",
        data: "User data updated" + data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req.on('error', (e) => {
    console.error(`problem with request: ${e.message}`);
  })
2024-09-10 16:11:50.514 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:50.520 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:50.521 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : options
2024-09-10 16:11:50.522 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })
2024-09-10 16:11:50.522 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:50.527 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:50.527 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : options
2024-09-10 16:11:50.530 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })
2024-09-10 16:11:50.530 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:50.535 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:50.536 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:50.536 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req.on('error', (e) => {
    console.error(`problem with request: ${e.message}`);
  })
2024-09-10 16:11:50.537 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:50.542 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:50.543 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : data
2024-09-10 16:11:50.544 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||data|||data|||data.email|||data.email|||"User data updated" + data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob|||_tmp_37.data|||{
        event: "user_update",
        data: "User data updated" + data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req|||req.write(data)
2024-09-10 16:11:50.545 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:50.550 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:50.551 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : data
2024-09-10 16:11:50.551 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||data|||data|||data.email|||data.email|||"User data fetched" + data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob|||_tmp_27.data|||{
          event: "fetch_user",
          data: "User data fetched" + data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob
        }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req|||req.write(data)
2024-09-10 16:11:50.552 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:50.557 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:50.558 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : data
2024-09-10 16:11:50.561 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req|||req.write(data)
2024-09-10 16:11:50.563 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:50.569 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:50.569 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:50.570 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req.on('error', (e) => {
    console.error(`problem with request: ${e.message}`);
  })
2024-09-10 16:11:50.571 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:50.575 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:50.576 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : options
2024-09-10 16:11:50.576 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: req.body.password|||_tmp_11.password|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })
2024-09-10 16:11:50.577 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:50.584 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:50.585 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : options
2024-09-10 16:11:50.586 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||data|||data|||data.email|||data.email|||"User data fetched" + data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob|||_tmp_27.data|||{
          event: "fetch_user",
          data: "User data fetched" + data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob
        }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })
2024-09-10 16:11:50.586 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:50.593 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:50.594 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:50.594 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: req.body.password|||_tmp_11.password|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req.on('error', (e) => {
    console.error(`problem with request: ${e.message}`);
  })
2024-09-10 16:11:50.595 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:50.599 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:50.600 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:50.601 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: _tmp_11.password|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req.on('error', (e) => {
    console.error(`problem with request: ${e.message}`);
  })
2024-09-10 16:11:50.601 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:50.613 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:50.614 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : options
2024-09-10 16:11:50.614 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||firstName|||firstName|||" Fetch results by firstname " + firstName|||_tmp_20.data|||{
    event: "search_users",
    data: " Fetch results by firstname " + firstName
  }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })
2024-09-10 16:11:50.615 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:50.622 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:50.623 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : data
2024-09-10 16:11:50.624 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||firstName|||firstName|||" Fetch results by firstname " + firstName|||_tmp_20.data|||{
    event: "search_users",
    data: " Fetch results by firstname " + firstName
  }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req|||req.write(data)
2024-09-10 16:11:50.624 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:50.630 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:50.631 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : options
2024-09-10 16:11:50.631 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: _tmp_11.password|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })
2024-09-10 16:11:50.632 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:50.636 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:50.637 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:50.637 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||firstName|||firstName|||" Fetch results by firstname " + firstName|||_tmp_20.data|||{
    event: "search_users",
    data: " Fetch results by firstname " + firstName
  }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req.on('error', (e) => {
    console.error(`problem with request: ${e.message}`);
  })
2024-09-10 16:11:50.638 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:50.642 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:50.642 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : data
2024-09-10 16:11:50.643 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: _tmp_11.password|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req|||req.write(data)
2024-09-10 16:11:50.643 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:50.651 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:50.652 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : options
2024-09-10 16:11:50.653 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||data|||data|||data.email|||data.email|||"User data updated" + data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob|||_tmp_37.data|||{
        event: "user_update",
        data: "User data updated" + data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })
2024-09-10 16:11:50.653 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:50.657 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:50.657 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : data
2024-09-10 16:11:50.658 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req|||req.write(data)
2024-09-10 16:11:50.659 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:50.663 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:50.665 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:50.666 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||data|||data|||data.email|||data.email|||"User data fetched" + data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob|||_tmp_27.data|||{
          event: "fetch_user",
          data: "User data fetched" + data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob
        }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req.on('error', (e) => {
    console.error(`problem with request: ${e.message}`);
  })
2024-09-10 16:11:50.666 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:50.670 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:50.670 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : data
2024-09-10 16:11:50.671 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: req.body.password|||_tmp_11.password|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req|||req.write(data)
2024-09-10 16:11:50.672 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:50.710 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.FirstName, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:50.712 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : options
2024-09-10 16:11:50.713 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: req.body.firstName|||_tmp_11.firstName|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })
2024-09-10 16:11:50.714 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:50.720 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.FirstName, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:50.721 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:50.721 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: req.body.firstName|||_tmp_11.firstName|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req.on('error', (e) => {
    console.error(`problem with request: ${e.message}`);
  })
2024-09-10 16:11:50.722 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:50.729 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.FirstName, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:50.729 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : data
2024-09-10 16:11:50.730 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: req.body.firstName|||_tmp_11.firstName|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req|||req.write(data)
2024-09-10 16:11:50.730 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:50.771 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.FirstName, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:50.771 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : options
2024-09-10 16:11:50.772 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: _tmp_11.firstName|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })
2024-09-10 16:11:50.772 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:50.787 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.FirstName, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:50.788 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:50.789 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: _tmp_11.firstName|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req.on('error', (e) => {
    console.error(`problem with request: ${e.message}`);
  })
2024-09-10 16:11:50.789 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:50.793 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.FirstName, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:50.794 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : data
2024-09-10 16:11:50.794 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: _tmp_11.firstName|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req|||req.write(data)
2024-09-10 16:11:50.795 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:50.806 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.Age, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:50.807 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:50.810 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||data|||data|||data.email|||data.email|||"User data updated" + data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob|||_tmp_37.data|||{
        event: "user_update",
        data: "User data updated" + data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req.on('error', (e) => {
    console.error(`problem with request: ${e.message}`);
  })
2024-09-10 16:11:50.811 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:50.814 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.Age, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:50.814 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : options
2024-09-10 16:11:50.815 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })
2024-09-10 16:11:50.815 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:50.818 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.Age, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:50.819 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : options
2024-09-10 16:11:50.819 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })
2024-09-10 16:11:50.819 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:50.823 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.Age, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:50.824 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:50.825 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req.on('error', (e) => {
    console.error(`problem with request: ${e.message}`);
  })
2024-09-10 16:11:50.825 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:50.829 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.Age, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:50.829 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : data
2024-09-10 16:11:50.830 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||data|||data|||data.email|||data.email|||"User data updated" + data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob|||_tmp_37.data|||{
        event: "user_update",
        data: "User data updated" + data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req|||req.write(data)
2024-09-10 16:11:50.830 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:50.835 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.Age, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:50.835 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : data
2024-09-10 16:11:50.836 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||data|||data|||data.email|||data.email|||"User data fetched" + data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob|||_tmp_27.data|||{
          event: "fetch_user",
          data: "User data fetched" + data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob
        }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req|||req.write(data)
2024-09-10 16:11:50.836 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:50.840 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.Age, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:50.840 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : data
2024-09-10 16:11:50.841 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req|||req.write(data)
2024-09-10 16:11:50.841 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:50.844 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.Age, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:50.845 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:50.845 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req.on('error', (e) => {
    console.error(`problem with request: ${e.message}`);
  })
2024-09-10 16:11:50.846 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:50.849 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.Age, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:50.849 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : options
2024-09-10 16:11:50.850 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||data|||data|||data.email|||data.email|||"User data fetched" + data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob|||_tmp_27.data|||{
          event: "fetch_user",
          data: "User data fetched" + data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob
        }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })
2024-09-10 16:11:50.850 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:50.854 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.Age, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:50.855 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : options
2024-09-10 16:11:50.856 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||firstName|||firstName|||" Fetch results by firstname " + firstName|||_tmp_20.data|||{
    event: "search_users",
    data: " Fetch results by firstname " + firstName
  }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })
2024-09-10 16:11:50.856 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:50.859 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.Age, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:50.860 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : data
2024-09-10 16:11:50.860 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||firstName|||firstName|||" Fetch results by firstname " + firstName|||_tmp_20.data|||{
    event: "search_users",
    data: " Fetch results by firstname " + firstName
  }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req|||req.write(data)
2024-09-10 16:11:50.861 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:50.864 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.Age, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:50.864 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:50.865 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||firstName|||firstName|||" Fetch results by firstname " + firstName|||_tmp_20.data|||{
    event: "search_users",
    data: " Fetch results by firstname " + firstName
  }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req.on('error', (e) => {
    console.error(`problem with request: ${e.message}`);
  })
2024-09-10 16:11:50.866 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:50.869 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.Age, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:50.870 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : options
2024-09-10 16:11:50.871 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||data|||data|||data.email|||data.email|||"User data updated" + data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob|||_tmp_37.data|||{
        event: "user_update",
        data: "User data updated" + data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })
2024-09-10 16:11:50.871 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:50.875 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.Age, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:50.875 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : data
2024-09-10 16:11:50.875 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req|||req.write(data)
2024-09-10 16:11:50.876 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:50.879 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.Age, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:50.879 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:50.880 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||data|||data|||data.email|||data.email|||"User data fetched" + data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob|||_tmp_27.data|||{
          event: "fetch_user",
          data: "User data fetched" + data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob
        }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req.on('error', (e) => {
    console.error(`problem with request: ${e.message}`);
  })
2024-09-10 16:11:50.880 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:50.954 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.ContactData.EmailAddress, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:50.955 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : options
2024-09-10 16:11:50.956 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||firstName|||firstName|||" Fetch results by firstname " + firstName|||_tmp_20.data|||{
    event: "search_users",
    data: " Fetch results by firstname " + firstName
  }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })
2024-09-10 16:11:50.956 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:50.966 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.ContactData.EmailAddress, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:50.967 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : data
2024-09-10 16:11:50.967 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||firstName|||firstName|||" Fetch results by firstname " + firstName|||_tmp_20.data|||{
    event: "search_users",
    data: " Fetch results by firstname " + firstName
  }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req|||req.write(data)
2024-09-10 16:11:50.967 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:50.979 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.ContactData.EmailAddress, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:50.979 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:50.980 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||firstName|||firstName|||" Fetch results by firstname " + firstName|||_tmp_20.data|||{
    event: "search_users",
    data: " Fetch results by firstname " + firstName
  }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req.on('error', (e) => {
    console.error(`problem with request: ${e.message}`);
  })
2024-09-10 16:11:50.980 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.015 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.LastName, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:51.016 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : options
2024-09-10 16:11:51.016 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: req.body.lastName|||_tmp_11.lastName|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })
2024-09-10 16:11:51.017 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.020 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.LastName, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:51.020 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:51.021 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: _tmp_11.lastName|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req.on('error', (e) => {
    console.error(`problem with request: ${e.message}`);
  })
2024-09-10 16:11:51.021 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.024 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.LastName, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:51.024 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : data
2024-09-10 16:11:51.025 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: req.body.lastName|||_tmp_11.lastName|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req|||req.write(data)
2024-09-10 16:11:51.025 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.028 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.LastName, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:51.028 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : options
2024-09-10 16:11:51.029 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: _tmp_11.lastName|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })
2024-09-10 16:11:51.029 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.032 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.LastName, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:51.032 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : data
2024-09-10 16:11:51.033 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: _tmp_11.lastName|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req|||req.write(data)
2024-09-10 16:11:51.033 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.036 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.LastName, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:51.036 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:51.037 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: req.body.lastName|||_tmp_11.lastName|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req.on('error', (e) => {
    console.error(`problem with request: ${e.message}`);
  })
2024-09-10 16:11:51.037 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.040 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.ContactData.PhoneNumber, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:51.040 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:51.041 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: _tmp_11.phone|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req.on('error', (e) => {
    console.error(`problem with request: ${e.message}`);
  })
2024-09-10 16:11:51.041 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.047 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.ContactData.PhoneNumber, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:51.047 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : data
2024-09-10 16:11:51.048 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: _tmp_11.phone|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req|||req.write(data)
2024-09-10 16:11:51.048 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.060 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.ContactData.PhoneNumber, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:51.061 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : options
2024-09-10 16:11:51.061 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: _tmp_11.phone|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })
2024-09-10 16:11:51.061 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.083 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.ContactData.PhoneNumber, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:51.083 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : data
2024-09-10 16:11:51.084 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: req.body.phone|||_tmp_11.phone|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req|||req.write(data)
2024-09-10 16:11:51.084 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.092 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.ContactData.PhoneNumber, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:51.092 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : options
2024-09-10 16:11:51.092 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: req.body.phone|||_tmp_11.phone|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })
2024-09-10 16:11:51.093 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.103 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.ContactData.PhoneNumber, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:51.103 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:51.103 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: req.body.phone|||_tmp_11.phone|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req.on('error', (e) => {
    console.error(`problem with request: ${e.message}`);
  })
2024-09-10 16:11:51.104 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.138 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.DateofBirth, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:51.140 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : options
2024-09-10 16:11:51.140 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: _tmp_11.dob|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })
2024-09-10 16:11:51.140 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.147 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.DateofBirth, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:51.148 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : data
2024-09-10 16:11:51.148 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: _tmp_11.dob|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req|||req.write(data)
2024-09-10 16:11:51.148 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.151 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.DateofBirth, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:51.152 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:51.152 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: _tmp_11.dob|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req.on('error', (e) => {
    console.error(`problem with request: ${e.message}`);
  })
2024-09-10 16:11:51.153 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.168 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.DateofBirth, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:51.169 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : data
2024-09-10 16:11:51.169 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: req.body.dob|||_tmp_11.dob|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req|||req.write(data)
2024-09-10 16:11:51.169 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.173 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.DateofBirth, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:51.174 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : options
2024-09-10 16:11:51.175 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: req.body.dob|||_tmp_11.dob|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })
2024-09-10 16:11:51.175 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.181 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.DateofBirth, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : internal_apis Derived source was present : false
2024-09-10 16:11:51.181 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:51.182 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: req.body.dob|||_tmp_11.dob|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req.on('error', (e) => {
    console.error(`problem with request: ${e.message}`);
  })
2024-09-10 16:11:51.182 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.252 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.Age, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : leakages Derived source was present : false
2024-09-10 16:11:51.253 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : error
2024-09-10 16:11:51.254 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: user|||user.firstName|||user.firstName|||'Some message ' + user.firstName + user.password|||_tmp_15.text|||{
        to: user.email,
        from: 'test@example.com', // Use the email address or domain you verified above
        subject: 'Welcome note',
        text: 'Some message ' + user.firstName + user.password,
        html: '<strong>and easy to do anywhere, even with Node.js</strong>',
      }|||msg|||msg|||msg|||msg|||sgMail.send(msg)|||_tmp_0|||_tmp_0|||error|||error|||console.error(error)
2024-09-10 16:11:51.254 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.257 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.Age, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : leakages Derived source was present : false
2024-09-10 16:11:51.257 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : error
2024-09-10 16:11:51.258 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||user|||user.firstName|||user.firstName|||'Some message ' + user.firstName + user.password|||_tmp_15.text|||{
        to: user.email,
        from: 'test@example.com', // Use the email address or domain you verified above
        subject: 'Welcome note',
        text: 'Some message ' + user.firstName + user.password,
        html: '<strong>and easy to do anywhere, even with Node.js</strong>',
      }|||msg|||msg|||msg|||msg|||sgMail.send(msg)|||_tmp_0|||_tmp_0|||error|||error|||console.error(error)
2024-09-10 16:11:51.258 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.264 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.Age, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : leakages Derived source was present : false
2024-09-10 16:11:51.264 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:51.264 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||e|||e.message|||<operator>.formatString("problem with request: ", e.message, "")|||console.error(`problem with request: ${e.message}`)
2024-09-10 16:11:51.265 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.271 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.Age, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : leakages Derived source was present : false
2024-09-10 16:11:51.272 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:51.272 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||data|||data|||data.email|||data.email|||"User data fetched" + data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob|||_tmp_27.data|||{
          event: "fetch_user",
          data: "User data fetched" + data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob
        }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||e|||e.message|||<operator>.formatString("problem with request: ", e.message, "")|||console.error(`problem with request: ${e.message}`)
2024-09-10 16:11:51.272 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.275 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.Age, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : leakages Derived source was present : false
2024-09-10 16:11:51.276 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:51.276 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||firstName|||firstName|||" Fetch results by firstname " + firstName|||_tmp_20.data|||{
    event: "search_users",
    data: " Fetch results by firstname " + firstName
  }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||e|||e.message|||<operator>.formatString("problem with request: ", e.message, "")|||console.error(`problem with request: ${e.message}`)
2024-09-10 16:11:51.277 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.293 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.Age, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : leakages Derived source was present : false
2024-09-10 16:11:51.295 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:51.296 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||data|||data|||data.email|||data.email|||"User data updated" + data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob|||_tmp_37.data|||{
        event: "user_update",
        data: "User data updated" + data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||e|||e.message|||<operator>.formatString("problem with request: ", e.message, "")|||console.error(`problem with request: ${e.message}`)
2024-09-10 16:11:51.297 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.300 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.Age, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : leakages Derived source was present : false
2024-09-10 16:11:51.300 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : error
2024-09-10 16:11:51.301 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: user|||user|||user.firstName|||user.firstName|||'Some message ' + user.firstName + user.password|||_tmp_15.text|||{
        to: user.email,
        from: 'test@example.com', // Use the email address or domain you verified above
        subject: 'Welcome note',
        text: 'Some message ' + user.firstName + user.password,
        html: '<strong>and easy to do anywhere, even with Node.js</strong>',
      }|||msg|||msg|||msg|||msg|||sgMail.send(msg)|||_tmp_0|||_tmp_0|||error|||error|||console.error(error)
2024-09-10 16:11:51.301 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.312 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.Age, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : leakages Derived source was present : false
2024-09-10 16:11:51.313 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:51.313 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||e|||e.message|||<operator>.formatString("problem with request: ", e.message, "")|||console.error(`problem with request: ${e.message}`)
2024-09-10 16:11:51.313 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.320 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.ContactData.EmailAddress, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : leakages Derived source was present : false
2024-09-10 16:11:51.321 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : error
2024-09-10 16:11:51.322 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: user|||user.firstName|||user.firstName|||'Some message ' + user.firstName + user.password|||_tmp_15.text|||{
        to: user.email,
        from: 'test@example.com', // Use the email address or domain you verified above
        subject: 'Welcome note',
        text: 'Some message ' + user.firstName + user.password,
        html: '<strong>and easy to do anywhere, even with Node.js</strong>',
      }|||msg|||msg|||msg|||msg|||sgMail.send(msg)|||_tmp_0|||_tmp_0|||error|||error|||console.error(error)
2024-09-10 16:11:51.322 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.330 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.ContactData.EmailAddress, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : leakages Derived source was present : false
2024-09-10 16:11:51.331 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : error
2024-09-10 16:11:51.331 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||user|||user.firstName|||user.firstName|||'Some message ' + user.firstName + user.password|||_tmp_15.text|||{
        to: user.email,
        from: 'test@example.com', // Use the email address or domain you verified above
        subject: 'Welcome note',
        text: 'Some message ' + user.firstName + user.password,
        html: '<strong>and easy to do anywhere, even with Node.js</strong>',
      }|||msg|||msg|||msg|||msg|||sgMail.send(msg)|||_tmp_0|||_tmp_0|||error|||error|||console.error(error)
2024-09-10 16:11:51.332 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.341 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:522: Flow Removal : Flow marked incorrect due to presence of other member
disallowedMembers : ListBuffer(age, password)
allowedMemberName : email 
pathSourceId : Data.Sensitive.ContactData.EmailAddress 
pathId : 620-688-705-732-788-780-777-588-235-239-238-237-280-279-275-272-126-263-124-241-290-285-284-296-216-225-223-218 
logStatement : console.error(`problem with request: ${e.message}`)
2024-09-10 16:11:51.354 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.ContactData.EmailAddress, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : leakages Derived source was present : false
2024-09-10 16:11:51.355 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : error
2024-09-10 16:11:51.355 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: req.body.email|||_tmp_11.email|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.firstName|||user.firstName|||'Some message ' + user.firstName + user.password|||_tmp_15.text|||{
        to: user.email,
        from: 'test@example.com', // Use the email address or domain you verified above
        subject: 'Welcome note',
        text: 'Some message ' + user.firstName + user.password,
        html: '<strong>and easy to do anywhere, even with Node.js</strong>',
      }|||msg|||msg|||msg|||msg|||sgMail.send(msg)|||_tmp_0|||_tmp_0|||error|||error|||console.error(error)
2024-09-10 16:11:51.356 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.365 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:522: Flow Removal : Flow marked incorrect due to presence of other member
disallowedMembers : ListBuffer(age, password)
allowedMemberName : email 
pathSourceId : Data.Sensitive.ContactData.EmailAddress 
pathId : 1359-1101-941-1008-1030-1071-1063-1060-936-235-239-238-237-280-279-275-272-126-263-124-241-290-285-284-296-216-225-223-218 
logStatement : console.error(`problem with request: ${e.message}`)
2024-09-10 16:11:51.370 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.ContactData.EmailAddress, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : leakages Derived source was present : false
2024-09-10 16:11:51.371 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:51.372 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||firstName|||firstName|||" Fetch results by firstname " + firstName|||_tmp_20.data|||{
    event: "search_users",
    data: " Fetch results by firstname " + firstName
  }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||e|||e.message|||<operator>.formatString("problem with request: ", e.message, "")|||console.error(`problem with request: ${e.message}`)
2024-09-10 16:11:51.373 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.401 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.ContactData.EmailAddress, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : leakages Derived source was present : false
2024-09-10 16:11:51.402 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : error
2024-09-10 16:11:51.403 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: _tmp_11.email|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.firstName|||user.firstName|||'Some message ' + user.firstName + user.password|||_tmp_15.text|||{
        to: user.email,
        from: 'test@example.com', // Use the email address or domain you verified above
        subject: 'Welcome note',
        text: 'Some message ' + user.firstName + user.password,
        html: '<strong>and easy to do anywhere, even with Node.js</strong>',
      }|||msg|||msg|||msg|||msg|||sgMail.send(msg)|||_tmp_0|||_tmp_0|||error|||error|||console.error(error)
2024-09-10 16:11:51.403 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.407 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:522: Flow Removal : Flow marked incorrect due to presence of other member
disallowedMembers : ListBuffer(age, password)
allowedMemberName : email 
pathSourceId : Data.Sensitive.ContactData.EmailAddress 
pathId : 1359-1320-1128-1195-1217-1258-1250-1247-1123-235-239-238-237-280-279-275-272-126-263-124-241-290-285-284-296-216-225-223-218 
logStatement : console.error(`problem with request: ${e.message}`)
2024-09-10 16:11:51.412 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.ContactData.EmailAddress, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : leakages Derived source was present : false
2024-09-10 16:11:51.413 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : error
2024-09-10 16:11:51.413 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: user|||user|||user.firstName|||user.firstName|||'Some message ' + user.firstName + user.password|||_tmp_15.text|||{
        to: user.email,
        from: 'test@example.com', // Use the email address or domain you verified above
        subject: 'Welcome note',
        text: 'Some message ' + user.firstName + user.password,
        html: '<strong>and easy to do anywhere, even with Node.js</strong>',
      }|||msg|||msg|||msg|||msg|||sgMail.send(msg)|||_tmp_0|||_tmp_0|||error|||error|||console.error(error)
2024-09-10 16:11:51.414 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.426 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:522: Flow Removal : Flow marked incorrect due to presence of other member
disallowedMembers : ListBuffer(age, password)
allowedMemberName : email 
pathSourceId : Data.Sensitive.ContactData.EmailAddress 
pathId : 688-705-732-788-780-777-588-235-239-238-237-280-279-275-272-126-263-124-241-290-285-284-296-216-225-223-218 
logStatement : console.error(`problem with request: ${e.message}`)
2024-09-10 16:11:51.440 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : leakages Derived source was present : false
2024-09-10 16:11:51.440 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:51.441 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: _tmp_11.password|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||e|||e.message|||<operator>.formatString("problem with request: ", e.message, "")|||console.error(`problem with request: ${e.message}`)
2024-09-10 16:11:51.442 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.445 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : leakages Derived source was present : false
2024-09-10 16:11:51.445 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : error
2024-09-10 16:11:51.446 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: user|||user.firstName|||user.firstName|||'Some message ' + user.firstName + user.password|||_tmp_15.text|||{
        to: user.email,
        from: 'test@example.com', // Use the email address or domain you verified above
        subject: 'Welcome note',
        text: 'Some message ' + user.firstName + user.password,
        html: '<strong>and easy to do anywhere, even with Node.js</strong>',
      }|||msg|||msg|||msg|||msg|||sgMail.send(msg)|||_tmp_0|||_tmp_0|||error|||error|||console.error(error)
2024-09-10 16:11:51.446 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.449 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : leakages Derived source was present : false
2024-09-10 16:11:51.449 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : error
2024-09-10 16:11:51.450 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||user|||user.firstName|||user.firstName|||'Some message ' + user.firstName + user.password|||_tmp_15.text|||{
        to: user.email,
        from: 'test@example.com', // Use the email address or domain you verified above
        subject: 'Welcome note',
        text: 'Some message ' + user.firstName + user.password,
        html: '<strong>and easy to do anywhere, even with Node.js</strong>',
      }|||msg|||msg|||msg|||msg|||sgMail.send(msg)|||_tmp_0|||_tmp_0|||error|||error|||console.error(error)
2024-09-10 16:11:51.450 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.453 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : leakages Derived source was present : false
2024-09-10 16:11:51.454 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:51.454 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||e|||e.message|||<operator>.formatString("problem with request: ", e.message, "")|||console.error(`problem with request: ${e.message}`)
2024-09-10 16:11:51.455 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.465 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : leakages Derived source was present : false
2024-09-10 16:11:51.465 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:51.466 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||data|||data|||data.email|||data.email|||"User data fetched" + data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob|||_tmp_27.data|||{
          event: "fetch_user",
          data: "User data fetched" + data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob
        }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||e|||e.message|||<operator>.formatString("problem with request: ", e.message, "")|||console.error(`problem with request: ${e.message}`)
2024-09-10 16:11:51.466 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.470 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : leakages Derived source was present : false
2024-09-10 16:11:51.471 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:51.472 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||firstName|||firstName|||" Fetch results by firstname " + firstName|||_tmp_20.data|||{
    event: "search_users",
    data: " Fetch results by firstname " + firstName
  }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||e|||e.message|||<operator>.formatString("problem with request: ", e.message, "")|||console.error(`problem with request: ${e.message}`)
2024-09-10 16:11:51.472 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.486 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : leakages Derived source was present : false
2024-09-10 16:11:51.487 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : error
2024-09-10 16:11:51.488 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: req.body.password|||_tmp_11.password|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.firstName|||user.firstName|||'Some message ' + user.firstName + user.password|||_tmp_15.text|||{
        to: user.email,
        from: 'test@example.com', // Use the email address or domain you verified above
        subject: 'Welcome note',
        text: 'Some message ' + user.firstName + user.password,
        html: '<strong>and easy to do anywhere, even with Node.js</strong>',
      }|||msg|||msg|||msg|||msg|||sgMail.send(msg)|||_tmp_0|||_tmp_0|||error|||error|||console.error(error)
2024-09-10 16:11:51.488 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.491 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : leakages Derived source was present : false
2024-09-10 16:11:51.492 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : error
2024-09-10 16:11:51.493 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: _tmp_11.password|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.firstName|||user.firstName|||'Some message ' + user.firstName + user.password|||_tmp_15.text|||{
        to: user.email,
        from: 'test@example.com', // Use the email address or domain you verified above
        subject: 'Welcome note',
        text: 'Some message ' + user.firstName + user.password,
        html: '<strong>and easy to do anywhere, even with Node.js</strong>',
      }|||msg|||msg|||msg|||msg|||sgMail.send(msg)|||_tmp_0|||_tmp_0|||error|||error|||console.error(error)
2024-09-10 16:11:51.494 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.501 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : leakages Derived source was present : false
2024-09-10 16:11:51.502 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:51.504 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||data|||data|||data.email|||data.email|||"User data updated" + data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob|||_tmp_37.data|||{
        event: "user_update",
        data: "User data updated" + data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||e|||e.message|||<operator>.formatString("problem with request: ", e.message, "")|||console.error(`problem with request: ${e.message}`)
2024-09-10 16:11:51.505 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.509 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : leakages Derived source was present : false
2024-09-10 16:11:51.509 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : error
2024-09-10 16:11:51.510 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: user|||user|||user.firstName|||user.firstName|||'Some message ' + user.firstName + user.password|||_tmp_15.text|||{
        to: user.email,
        from: 'test@example.com', // Use the email address or domain you verified above
        subject: 'Welcome note',
        text: 'Some message ' + user.firstName + user.password,
        html: '<strong>and easy to do anywhere, even with Node.js</strong>',
      }|||msg|||msg|||msg|||msg|||sgMail.send(msg)|||_tmp_0|||_tmp_0|||error|||error|||console.error(error)
2024-09-10 16:11:51.510 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.524 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : leakages Derived source was present : false
2024-09-10 16:11:51.525 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:51.526 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||e|||e.message|||<operator>.formatString("problem with request: ", e.message, "")|||console.error(`problem with request: ${e.message}`)
2024-09-10 16:11:51.527 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.530 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : leakages Derived source was present : false
2024-09-10 16:11:51.530 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:51.531 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: req.body.password|||_tmp_11.password|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||e|||e.message|||<operator>.formatString("problem with request: ", e.message, "")|||console.error(`problem with request: ${e.message}`)
2024-09-10 16:11:51.531 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.584 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.FirstName, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : leakages Derived source was present : false
2024-09-10 16:11:51.587 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:51.589 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: _tmp_11.firstName|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||e|||e.message|||<operator>.formatString("problem with request: ", e.message, "")|||console.error(`problem with request: ${e.message}`)
2024-09-10 16:11:51.590 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.599 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.FirstName, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : leakages Derived source was present : false
2024-09-10 16:11:51.599 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:51.600 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: req.body.firstName|||_tmp_11.firstName|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||e|||e.message|||<operator>.formatString("problem with request: ", e.message, "")|||console.error(`problem with request: ${e.message}`)
2024-09-10 16:11:51.601 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.631 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.LastName, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : leakages Derived source was present : false
2024-09-10 16:11:51.632 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : error
2024-09-10 16:11:51.632 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: req.body.lastName|||_tmp_11.lastName|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.firstName|||user.firstName|||'Some message ' + user.firstName + user.password|||_tmp_15.text|||{
        to: user.email,
        from: 'test@example.com', // Use the email address or domain you verified above
        subject: 'Welcome note',
        text: 'Some message ' + user.firstName + user.password,
        html: '<strong>and easy to do anywhere, even with Node.js</strong>',
      }|||msg|||msg|||msg|||msg|||sgMail.send(msg)|||_tmp_0|||_tmp_0|||error|||error|||console.error(error)
2024-09-10 16:11:51.633 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.636 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.LastName, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : leakages Derived source was present : false
2024-09-10 16:11:51.636 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:51.637 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: req.body.lastName|||_tmp_11.lastName|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||e|||e.message|||<operator>.formatString("problem with request: ", e.message, "")|||console.error(`problem with request: ${e.message}`)
2024-09-10 16:11:51.637 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.640 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.LastName, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : leakages Derived source was present : false
2024-09-10 16:11:51.640 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : error
2024-09-10 16:11:51.641 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: _tmp_11.lastName|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.firstName|||user.firstName|||'Some message ' + user.firstName + user.password|||_tmp_15.text|||{
        to: user.email,
        from: 'test@example.com', // Use the email address or domain you verified above
        subject: 'Welcome note',
        text: 'Some message ' + user.firstName + user.password,
        html: '<strong>and easy to do anywhere, even with Node.js</strong>',
      }|||msg|||msg|||msg|||msg|||sgMail.send(msg)|||_tmp_0|||_tmp_0|||error|||error|||console.error(error)
2024-09-10 16:11:51.641 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.649 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.LastName, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : leakages Derived source was present : false
2024-09-10 16:11:51.650 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:51.651 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: _tmp_11.lastName|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||e|||e.message|||<operator>.formatString("problem with request: ", e.message, "")|||console.error(`problem with request: ${e.message}`)
2024-09-10 16:11:51.651 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.664 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.ContactData.PhoneNumber, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : leakages Derived source was present : false
2024-09-10 16:11:51.665 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : error
2024-09-10 16:11:51.665 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: _tmp_11.phone|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.firstName|||user.firstName|||'Some message ' + user.firstName + user.password|||_tmp_15.text|||{
        to: user.email,
        from: 'test@example.com', // Use the email address or domain you verified above
        subject: 'Welcome note',
        text: 'Some message ' + user.firstName + user.password,
        html: '<strong>and easy to do anywhere, even with Node.js</strong>',
      }|||msg|||msg|||msg|||msg|||sgMail.send(msg)|||_tmp_0|||_tmp_0|||error|||error|||console.error(error)
2024-09-10 16:11:51.666 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.669 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.ContactData.PhoneNumber, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : leakages Derived source was present : false
2024-09-10 16:11:51.669 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:51.669 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: req.body.phone|||_tmp_11.phone|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||e|||e.message|||<operator>.formatString("problem with request: ", e.message, "")|||console.error(`problem with request: ${e.message}`)
2024-09-10 16:11:51.670 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.677 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.ContactData.PhoneNumber, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : leakages Derived source was present : false
2024-09-10 16:11:51.678 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:51.678 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: _tmp_11.phone|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||e|||e.message|||<operator>.formatString("problem with request: ", e.message, "")|||console.error(`problem with request: ${e.message}`)
2024-09-10 16:11:51.679 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.686 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.ContactData.PhoneNumber, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : leakages Derived source was present : false
2024-09-10 16:11:51.687 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : error
2024-09-10 16:11:51.687 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: req.body.phone|||_tmp_11.phone|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.firstName|||user.firstName|||'Some message ' + user.firstName + user.password|||_tmp_15.text|||{
        to: user.email,
        from: 'test@example.com', // Use the email address or domain you verified above
        subject: 'Welcome note',
        text: 'Some message ' + user.firstName + user.password,
        html: '<strong>and easy to do anywhere, even with Node.js</strong>',
      }|||msg|||msg|||msg|||msg|||sgMail.send(msg)|||_tmp_0|||_tmp_0|||error|||error|||console.error(error)
2024-09-10 16:11:51.688 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.699 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.DateofBirth, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : leakages Derived source was present : false
2024-09-10 16:11:51.700 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:51.701 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: _tmp_11.dob|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||e|||e.message|||<operator>.formatString("problem with request: ", e.message, "")|||console.error(`problem with request: ${e.message}`)
2024-09-10 16:11:51.702 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.708 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.DateofBirth, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : leakages Derived source was present : false
2024-09-10 16:11:51.709 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : error
2024-09-10 16:11:51.709 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: req.body.dob|||_tmp_11.dob|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.firstName|||user.firstName|||'Some message ' + user.firstName + user.password|||_tmp_15.text|||{
        to: user.email,
        from: 'test@example.com', // Use the email address or domain you verified above
        subject: 'Welcome note',
        text: 'Some message ' + user.firstName + user.password,
        html: '<strong>and easy to do anywhere, even with Node.js</strong>',
      }|||msg|||msg|||msg|||msg|||sgMail.send(msg)|||_tmp_0|||_tmp_0|||error|||error|||console.error(error)
2024-09-10 16:11:51.711 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.728 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.DateofBirth, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : leakages Derived source was present : false
2024-09-10 16:11:51.729 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : error
2024-09-10 16:11:51.730 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: _tmp_11.dob|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.firstName|||user.firstName|||'Some message ' + user.firstName + user.password|||_tmp_15.text|||{
        to: user.email,
        from: 'test@example.com', // Use the email address or domain you verified above
        subject: 'Welcome note',
        text: 'Some message ' + user.firstName + user.password,
        html: '<strong>and easy to do anywhere, even with Node.js</strong>',
      }|||msg|||msg|||msg|||msg|||sgMail.send(msg)|||_tmp_0|||_tmp_0|||error|||error|||console.error(error)
2024-09-10 16:11:51.731 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.734 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.DateofBirth, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : leakages Derived source was present : false
2024-09-10 16:11:51.735 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:51.736 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: req.body.dob|||_tmp_11.dob|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||e|||e.message|||<operator>.formatString("problem with request: ", e.message, "")|||console.error(`problem with request: ${e.message}`)
2024-09-10 16:11:51.737 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.757 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:51.757 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:51.757 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||data|||data|||data.email|||data.email|||"User data updated" + data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob|||_tmp_37.data|||{
        event: "user_update",
        data: "User data updated" + data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req.on('error', (e) => {
    console.error(`problem with request: ${e.message}`);
  })
2024-09-10 16:11:51.758 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.767 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:51.769 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : msg
2024-09-10 16:11:51.771 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: _tmp_11.password|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.firstName|||user.firstName|||'Some message ' + user.firstName + user.password|||_tmp_15.text|||{
        to: user.email,
        from: 'test@example.com', // Use the email address or domain you verified above
        subject: 'Welcome note',
        text: 'Some message ' + user.firstName + user.password,
        html: '<strong>and easy to do anywhere, even with Node.js</strong>',
      }|||msg|||msg|||msg|||msg|||sgMail.send(msg)
2024-09-10 16:11:51.771 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.773 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:51.774 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : options
2024-09-10 16:11:51.774 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })
2024-09-10 16:11:51.775 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.777 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:51.777 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:51.778 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: user|||user.firstName|||user.firstName|||'Some message ' + user.firstName + user.password|||_tmp_15.text|||{
        to: user.email,
        from: 'test@example.com', // Use the email address or domain you verified above
        subject: 'Welcome note',
        text: 'Some message ' + user.firstName + user.password,
        html: '<strong>and easy to do anywhere, even with Node.js</strong>',
      }|||msg|||msg|||msg|||msg|||sgMail.send(msg)|||_tmp_0|||_tmp_0|||sgMail.send(msg).then(() => {}, error => {
    console.error(error);

    if (error.response) {
      console.error(error.response.body)
    }
})
2024-09-10 16:11:51.778 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.780 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:51.781 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : options
2024-09-10 16:11:51.781 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })
2024-09-10 16:11:51.781 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.783 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:51.784 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:51.784 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req.on('error', (e) => {
    console.error(`problem with request: ${e.message}`);
  })
2024-09-10 16:11:51.784 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.786 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:51.787 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:51.787 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: req.body.password|||_tmp_11.password|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.firstName|||user.firstName|||'Some message ' + user.firstName + user.password|||_tmp_15.text|||{
        to: user.email,
        from: 'test@example.com', // Use the email address or domain you verified above
        subject: 'Welcome note',
        text: 'Some message ' + user.firstName + user.password,
        html: '<strong>and easy to do anywhere, even with Node.js</strong>',
      }|||msg|||msg|||msg|||msg|||sgMail.send(msg)|||_tmp_0|||_tmp_0|||sgMail.send(msg).then(() => {}, error => {
    console.error(error);

    if (error.response) {
      console.error(error.response.body)
    }
})
2024-09-10 16:11:51.788 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.790 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:51.790 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:51.790 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: user|||user|||user.firstName|||user.firstName|||'Some message ' + user.firstName + user.password|||_tmp_15.text|||{
        to: user.email,
        from: 'test@example.com', // Use the email address or domain you verified above
        subject: 'Welcome note',
        text: 'Some message ' + user.firstName + user.password,
        html: '<strong>and easy to do anywhere, even with Node.js</strong>',
      }|||msg|||msg|||msg|||msg|||sgMail.send(msg)|||_tmp_0|||_tmp_0|||sgMail.send(msg).then(() => {}, error => {
    console.error(error);

    if (error.response) {
      console.error(error.response.body)
    }
})
2024-09-10 16:11:51.791 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.793 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:51.793 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : msg
2024-09-10 16:11:51.794 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: req.body.password|||_tmp_11.password|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||'New user ' + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_14.text|||{
        text: 'New user ' + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob,
        channel: conversationId,
      }|||msg|||msg|||web.chat.postMessage(msg)
2024-09-10 16:11:51.794 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.796 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:51.796 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : data
2024-09-10 16:11:51.797 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||data|||data|||data.email|||data.email|||"User data updated" + data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob|||_tmp_37.data|||{
        event: "user_update",
        data: "User data updated" + data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req|||req.write(data)
2024-09-10 16:11:51.797 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.799 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:51.799 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : msg
2024-09-10 16:11:51.800 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||user|||user.email|||'New user ' + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_14.text|||{
        text: 'New user ' + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob,
        channel: conversationId,
      }|||msg|||msg|||web.chat.postMessage(msg)
2024-09-10 16:11:51.800 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.802 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:51.803 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : data
2024-09-10 16:11:51.803 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||data|||data|||data.email|||data.email|||"User data fetched" + data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob|||_tmp_27.data|||{
          event: "fetch_user",
          data: "User data fetched" + data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob
        }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req|||req.write(data)
2024-09-10 16:11:51.803 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.810 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:51.810 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : msg
2024-09-10 16:11:51.811 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: user|||user.firstName|||user.firstName|||'Some message ' + user.firstName + user.password|||_tmp_15.text|||{
        to: user.email,
        from: 'test@example.com', // Use the email address or domain you verified above
        subject: 'Welcome note',
        text: 'Some message ' + user.firstName + user.password,
        html: '<strong>and easy to do anywhere, even with Node.js</strong>',
      }|||msg|||msg|||msg|||msg|||sgMail.send(msg)
2024-09-10 16:11:51.811 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.816 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:51.817 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : data
2024-09-10 16:11:51.817 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req|||req.write(data)
2024-09-10 16:11:51.818 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.820 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:51.820 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:51.821 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req.on('error', (e) => {
    console.error(`problem with request: ${e.message}`);
  })
2024-09-10 16:11:51.821 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.823 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:51.823 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : msg
2024-09-10 16:11:51.824 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: req.body.password|||_tmp_11.password|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.firstName|||user.firstName|||'Some message ' + user.firstName + user.password|||_tmp_15.text|||{
        to: user.email,
        from: 'test@example.com', // Use the email address or domain you verified above
        subject: 'Welcome note',
        text: 'Some message ' + user.firstName + user.password,
        html: '<strong>and easy to do anywhere, even with Node.js</strong>',
      }|||msg|||msg|||msg|||msg|||sgMail.send(msg)
2024-09-10 16:11:51.824 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.826 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:51.827 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : options
2024-09-10 16:11:51.827 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: req.body.password|||_tmp_11.password|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })
2024-09-10 16:11:51.827 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.829 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:51.831 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : msg
2024-09-10 16:11:51.831 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||user|||user.firstName|||user.firstName|||'Some message ' + user.firstName + user.password|||_tmp_15.text|||{
        to: user.email,
        from: 'test@example.com', // Use the email address or domain you verified above
        subject: 'Welcome note',
        text: 'Some message ' + user.firstName + user.password,
        html: '<strong>and easy to do anywhere, even with Node.js</strong>',
      }|||msg|||msg|||msg|||msg|||sgMail.send(msg)
2024-09-10 16:11:51.832 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.835 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:51.835 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : options
2024-09-10 16:11:51.836 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||data|||data|||data.email|||data.email|||"User data fetched" + data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob|||_tmp_27.data|||{
          event: "fetch_user",
          data: "User data fetched" + data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob
        }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })
2024-09-10 16:11:51.836 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.838 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:51.839 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : msg
2024-09-10 16:11:51.839 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: user|||user|||user.firstName|||user.firstName|||'Some message ' + user.firstName + user.password|||_tmp_15.text|||{
        to: user.email,
        from: 'test@example.com', // Use the email address or domain you verified above
        subject: 'Welcome note',
        text: 'Some message ' + user.firstName + user.password,
        html: '<strong>and easy to do anywhere, even with Node.js</strong>',
      }|||msg|||msg|||msg|||msg|||sgMail.send(msg)
2024-09-10 16:11:51.839 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.842 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:51.842 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:51.842 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: req.body.password|||_tmp_11.password|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req.on('error', (e) => {
    console.error(`problem with request: ${e.message}`);
  })
2024-09-10 16:11:51.843 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.845 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:51.846 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:51.846 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: _tmp_11.password|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req.on('error', (e) => {
    console.error(`problem with request: ${e.message}`);
  })
2024-09-10 16:11:51.846 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.849 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:51.849 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : options
2024-09-10 16:11:51.849 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||firstName|||firstName|||" Fetch results by firstname " + firstName|||_tmp_20.data|||{
    event: "search_users",
    data: " Fetch results by firstname " + firstName
  }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })
2024-09-10 16:11:51.850 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.852 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:51.852 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : data
2024-09-10 16:11:51.853 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||firstName|||firstName|||" Fetch results by firstname " + firstName|||_tmp_20.data|||{
    event: "search_users",
    data: " Fetch results by firstname " + firstName
  }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req|||req.write(data)
2024-09-10 16:11:51.853 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.855 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:51.856 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : msg
2024-09-10 16:11:51.857 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: _tmp_11.password|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||'New user ' + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_14.text|||{
        text: 'New user ' + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob,
        channel: conversationId,
      }|||msg|||msg|||web.chat.postMessage(msg)
2024-09-10 16:11:51.857 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.859 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:51.860 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : msg
2024-09-10 16:11:51.860 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: user|||user|||user.email|||'New user ' + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_14.text|||{
        text: 'New user ' + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob,
        channel: conversationId,
      }|||msg|||msg|||web.chat.postMessage(msg)
2024-09-10 16:11:51.860 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.862 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:51.863 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : options
2024-09-10 16:11:51.863 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: _tmp_11.password|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })
2024-09-10 16:11:51.864 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.866 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:51.866 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:51.867 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||data|||data|||data.email|||'User details updated ' - data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob|||_tmp_36.text|||{
        text: 'User details updated ' - data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob,
        channel: conversationId,
      }|||web.chat.postMessage({
        text: 'User details updated ' - data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob,
        channel: conversationId,
      })
2024-09-10 16:11:51.868 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.872 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:51.872 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:51.873 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||firstName|||firstName|||" Fetch results by firstname " + firstName|||_tmp_20.data|||{
    event: "search_users",
    data: " Fetch results by firstname " + firstName
  }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req.on('error', (e) => {
    console.error(`problem with request: ${e.message}`);
  })
2024-09-10 16:11:51.876 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.879 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:51.880 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : data
2024-09-10 16:11:51.881 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: _tmp_11.password|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req|||req.write(data)
2024-09-10 16:11:51.882 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.884 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:51.885 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:51.885 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||data|||data|||data.email|||'Fetch user details ' + data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob|||_tmp_26.text|||{
          text: 'Fetch user details ' + data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob,
          channel: conversationId,
        }|||web.chat.postMessage({
          text: 'Fetch user details ' + data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob,
          channel: conversationId,
        })
2024-09-10 16:11:51.886 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.891 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:51.894 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : options
2024-09-10 16:11:51.896 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||data|||data|||data.email|||data.email|||"User data updated" + data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob|||_tmp_37.data|||{
        event: "user_update",
        data: "User data updated" + data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })
2024-09-10 16:11:51.897 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.899 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:51.901 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : msg
2024-09-10 16:11:51.902 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: user|||user.email|||'New user ' + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_14.text|||{
        text: 'New user ' + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob,
        channel: conversationId,
      }|||msg|||msg|||web.chat.postMessage(msg)
2024-09-10 16:11:51.904 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.907 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:51.908 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:51.909 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: _tmp_11.password|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.firstName|||user.firstName|||'Some message ' + user.firstName + user.password|||_tmp_15.text|||{
        to: user.email,
        from: 'test@example.com', // Use the email address or domain you verified above
        subject: 'Welcome note',
        text: 'Some message ' + user.firstName + user.password,
        html: '<strong>and easy to do anywhere, even with Node.js</strong>',
      }|||msg|||msg|||msg|||msg|||sgMail.send(msg)|||_tmp_0|||_tmp_0|||sgMail.send(msg).then(() => {}, error => {
    console.error(error);

    if (error.response) {
      console.error(error.response.body)
    }
})
2024-09-10 16:11:51.910 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.913 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:51.913 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : data
2024-09-10 16:11:51.914 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req|||req.write(data)
2024-09-10 16:11:51.914 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.918 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:51.919 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:51.919 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||user|||user.firstName|||user.firstName|||'Some message ' + user.firstName + user.password|||_tmp_15.text|||{
        to: user.email,
        from: 'test@example.com', // Use the email address or domain you verified above
        subject: 'Welcome note',
        text: 'Some message ' + user.firstName + user.password,
        html: '<strong>and easy to do anywhere, even with Node.js</strong>',
      }|||msg|||msg|||msg|||msg|||sgMail.send(msg)|||_tmp_0|||_tmp_0|||sgMail.send(msg).then(() => {}, error => {
    console.error(error);

    if (error.response) {
      console.error(error.response.body)
    }
})
2024-09-10 16:11:51.920 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.922 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:51.923 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:51.924 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||data|||data|||data.email|||data.email|||"User data fetched" + data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob|||_tmp_27.data|||{
          event: "fetch_user",
          data: "User data fetched" + data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob
        }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req.on('error', (e) => {
    console.error(`problem with request: ${e.message}`);
  })
2024-09-10 16:11:51.924 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.927 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.AccountData.AccountPassword, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:51.928 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : data
2024-09-10 16:11:51.929 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: req.body.password|||_tmp_11.password|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req|||req.write(data)
2024-09-10 16:11:51.929 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.978 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.FirstName, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:51.979 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:51.979 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: req.body.firstName|||_tmp_11.firstName|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req.on('error', (e) => {
    console.error(`problem with request: ${e.message}`);
  })
2024-09-10 16:11:51.979 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.982 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.FirstName, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:51.982 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : options
2024-09-10 16:11:51.982 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: req.body.firstName|||_tmp_11.firstName|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })
2024-09-10 16:11:51.983 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.988 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.FirstName, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:51.989 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : data
2024-09-10 16:11:51.989 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: req.body.firstName|||_tmp_11.firstName|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req|||req.write(data)
2024-09-10 16:11:51.989 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:51.991 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.FirstName, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:51.992 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : msg
2024-09-10 16:11:51.992 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: _tmp_11.firstName|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||'New user ' + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_14.text|||{
        text: 'New user ' + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob,
        channel: conversationId,
      }|||msg|||msg|||web.chat.postMessage(msg)
2024-09-10 16:11:51.992 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.022 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.FirstName, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.022 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : options
2024-09-10 16:11:52.023 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: _tmp_11.firstName|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })
2024-09-10 16:11:52.023 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.033 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.FirstName, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.034 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:52.035 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: _tmp_11.firstName|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req.on('error', (e) => {
    console.error(`problem with request: ${e.message}`);
  })
2024-09-10 16:11:52.035 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.037 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.FirstName, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.038 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : msg
2024-09-10 16:11:52.038 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: req.body.firstName|||_tmp_11.firstName|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||'New user ' + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_14.text|||{
        text: 'New user ' + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob,
        channel: conversationId,
      }|||msg|||msg|||web.chat.postMessage(msg)
2024-09-10 16:11:52.038 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.041 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.FirstName, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.041 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : data
2024-09-10 16:11:52.041 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: _tmp_11.firstName|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req|||req.write(data)
2024-09-10 16:11:52.042 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.056 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.Age, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.056 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:52.056 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||data|||data|||data.email|||data.email|||"User data updated" + data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob|||_tmp_37.data|||{
        event: "user_update",
        data: "User data updated" + data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req.on('error', (e) => {
    console.error(`problem with request: ${e.message}`);
  })
2024-09-10 16:11:52.057 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.062 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.Age, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.062 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : options
2024-09-10 16:11:52.063 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })
2024-09-10 16:11:52.063 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.065 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.Age, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.065 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:52.066 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: user|||user.firstName|||user.firstName|||'Some message ' + user.firstName + user.password|||_tmp_15.text|||{
        to: user.email,
        from: 'test@example.com', // Use the email address or domain you verified above
        subject: 'Welcome note',
        text: 'Some message ' + user.firstName + user.password,
        html: '<strong>and easy to do anywhere, even with Node.js</strong>',
      }|||msg|||msg|||msg|||msg|||sgMail.send(msg)|||_tmp_0|||_tmp_0|||sgMail.send(msg).then(() => {}, error => {
    console.error(error);

    if (error.response) {
      console.error(error.response.body)
    }
})
2024-09-10 16:11:52.066 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.068 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.Age, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.068 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : options
2024-09-10 16:11:52.069 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })
2024-09-10 16:11:52.069 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.071 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.Age, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.072 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:52.072 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req.on('error', (e) => {
    console.error(`problem with request: ${e.message}`);
  })
2024-09-10 16:11:52.072 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.074 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.Age, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.074 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:52.075 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: user|||user|||user.firstName|||user.firstName|||'Some message ' + user.firstName + user.password|||_tmp_15.text|||{
        to: user.email,
        from: 'test@example.com', // Use the email address or domain you verified above
        subject: 'Welcome note',
        text: 'Some message ' + user.firstName + user.password,
        html: '<strong>and easy to do anywhere, even with Node.js</strong>',
      }|||msg|||msg|||msg|||msg|||sgMail.send(msg)|||_tmp_0|||_tmp_0|||sgMail.send(msg).then(() => {}, error => {
    console.error(error);

    if (error.response) {
      console.error(error.response.body)
    }
})
2024-09-10 16:11:52.075 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.077 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.Age, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.078 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : data
2024-09-10 16:11:52.078 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||data|||data|||data.email|||data.email|||"User data updated" + data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob|||_tmp_37.data|||{
        event: "user_update",
        data: "User data updated" + data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req|||req.write(data)
2024-09-10 16:11:52.078 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.080 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.Age, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.081 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : msg
2024-09-10 16:11:52.081 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||user|||user.email|||'New user ' + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_14.text|||{
        text: 'New user ' + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob,
        channel: conversationId,
      }|||msg|||msg|||web.chat.postMessage(msg)
2024-09-10 16:11:52.081 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.084 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.Age, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.084 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : data
2024-09-10 16:11:52.085 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||data|||data|||data.email|||data.email|||"User data fetched" + data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob|||_tmp_27.data|||{
          event: "fetch_user",
          data: "User data fetched" + data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob
        }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req|||req.write(data)
2024-09-10 16:11:52.085 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.089 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.Age, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.089 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : msg
2024-09-10 16:11:52.090 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: user|||user.firstName|||user.firstName|||'Some message ' + user.firstName + user.password|||_tmp_15.text|||{
        to: user.email,
        from: 'test@example.com', // Use the email address or domain you verified above
        subject: 'Welcome note',
        text: 'Some message ' + user.firstName + user.password,
        html: '<strong>and easy to do anywhere, even with Node.js</strong>',
      }|||msg|||msg|||msg|||msg|||sgMail.send(msg)
2024-09-10 16:11:52.090 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.094 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.Age, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.094 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : data
2024-09-10 16:11:52.095 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req|||req.write(data)
2024-09-10 16:11:52.095 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.097 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.Age, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.097 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:52.098 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req.on('error', (e) => {
    console.error(`problem with request: ${e.message}`);
  })
2024-09-10 16:11:52.098 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.100 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.Age, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.101 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : msg
2024-09-10 16:11:52.101 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||user|||user.firstName|||user.firstName|||'Some message ' + user.firstName + user.password|||_tmp_15.text|||{
        to: user.email,
        from: 'test@example.com', // Use the email address or domain you verified above
        subject: 'Welcome note',
        text: 'Some message ' + user.firstName + user.password,
        html: '<strong>and easy to do anywhere, even with Node.js</strong>',
      }|||msg|||msg|||msg|||msg|||sgMail.send(msg)
2024-09-10 16:11:52.101 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.103 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.Age, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.103 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : options
2024-09-10 16:11:52.104 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||data|||data|||data.email|||data.email|||"User data fetched" + data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob|||_tmp_27.data|||{
          event: "fetch_user",
          data: "User data fetched" + data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob
        }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })
2024-09-10 16:11:52.104 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.106 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.Age, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.107 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : msg
2024-09-10 16:11:52.107 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: user|||user|||user.firstName|||user.firstName|||'Some message ' + user.firstName + user.password|||_tmp_15.text|||{
        to: user.email,
        from: 'test@example.com', // Use the email address or domain you verified above
        subject: 'Welcome note',
        text: 'Some message ' + user.firstName + user.password,
        html: '<strong>and easy to do anywhere, even with Node.js</strong>',
      }|||msg|||msg|||msg|||msg|||sgMail.send(msg)
2024-09-10 16:11:52.107 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.109 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.Age, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.110 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : options
2024-09-10 16:11:52.111 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||firstName|||firstName|||" Fetch results by firstname " + firstName|||_tmp_20.data|||{
    event: "search_users",
    data: " Fetch results by firstname " + firstName
  }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })
2024-09-10 16:11:52.111 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.113 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.Age, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.114 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : data
2024-09-10 16:11:52.115 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||firstName|||firstName|||" Fetch results by firstname " + firstName|||_tmp_20.data|||{
    event: "search_users",
    data: " Fetch results by firstname " + firstName
  }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req|||req.write(data)
2024-09-10 16:11:52.116 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.118 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.Age, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.119 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : msg
2024-09-10 16:11:52.120 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: user|||user|||user.email|||'New user ' + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_14.text|||{
        text: 'New user ' + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob,
        channel: conversationId,
      }|||msg|||msg|||web.chat.postMessage(msg)
2024-09-10 16:11:52.120 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.123 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.Age, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.125 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:52.128 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||data|||data|||data.email|||'User details updated ' - data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob|||_tmp_36.text|||{
        text: 'User details updated ' - data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob,
        channel: conversationId,
      }|||web.chat.postMessage({
        text: 'User details updated ' - data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob,
        channel: conversationId,
      })
2024-09-10 16:11:52.129 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.132 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.Age, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.133 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:52.134 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||firstName|||firstName|||" Fetch results by firstname " + firstName|||_tmp_20.data|||{
    event: "search_users",
    data: " Fetch results by firstname " + firstName
  }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req.on('error', (e) => {
    console.error(`problem with request: ${e.message}`);
  })
2024-09-10 16:11:52.134 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.136 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.Age, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.137 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:52.140 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||data|||data|||data.email|||'Fetch user details ' + data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob|||_tmp_26.text|||{
          text: 'Fetch user details ' + data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob,
          channel: conversationId,
        }|||web.chat.postMessage({
          text: 'Fetch user details ' + data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob,
          channel: conversationId,
        })
2024-09-10 16:11:52.140 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.143 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.Age, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.144 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : options
2024-09-10 16:11:52.145 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||data|||data|||data.email|||data.email|||"User data updated" + data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob|||_tmp_37.data|||{
        event: "user_update",
        data: "User data updated" + data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })
2024-09-10 16:11:52.145 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.147 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.Age, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.147 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : msg
2024-09-10 16:11:52.148 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: user|||user.email|||'New user ' + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_14.text|||{
        text: 'New user ' + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob,
        channel: conversationId,
      }|||msg|||msg|||web.chat.postMessage(msg)
2024-09-10 16:11:52.148 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.156 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.Age, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.158 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : data
2024-09-10 16:11:52.159 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req|||req.write(data)
2024-09-10 16:11:52.159 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.165 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.Age, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.166 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:52.167 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||user|||user.firstName|||user.firstName|||'Some message ' + user.firstName + user.password|||_tmp_15.text|||{
        to: user.email,
        from: 'test@example.com', // Use the email address or domain you verified above
        subject: 'Welcome note',
        text: 'Some message ' + user.firstName + user.password,
        html: '<strong>and easy to do anywhere, even with Node.js</strong>',
      }|||msg|||msg|||msg|||msg|||sgMail.send(msg)|||_tmp_0|||_tmp_0|||sgMail.send(msg).then(() => {}, error => {
    console.error(error);

    if (error.response) {
      console.error(error.response.body)
    }
})
2024-09-10 16:11:52.167 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.169 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.Age, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.170 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:52.170 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||data|||data|||data.email|||data.email|||"User data fetched" + data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob|||_tmp_27.data|||{
          event: "fetch_user",
          data: "User data fetched" + data.email + ' ' + data.firstName + ' ' + data.phone + ' ' + data.dob
        }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req.on('error', (e) => {
    console.error(`problem with request: ${e.message}`);
  })
2024-09-10 16:11:52.170 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.178 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.ContactData.EmailAddress, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.178 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:52.178 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: _tmp_11.email|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.firstName|||user.firstName|||'Some message ' + user.firstName + user.password|||_tmp_15.text|||{
        to: user.email,
        from: 'test@example.com', // Use the email address or domain you verified above
        subject: 'Welcome note',
        text: 'Some message ' + user.firstName + user.password,
        html: '<strong>and easy to do anywhere, even with Node.js</strong>',
      }|||msg|||msg|||msg|||msg|||sgMail.send(msg)|||_tmp_0|||_tmp_0|||sgMail.send(msg).then(() => {}, error => {
    console.error(error);

    if (error.response) {
      console.error(error.response.body)
    }
})
2024-09-10 16:11:52.179 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.183 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.ContactData.EmailAddress, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.183 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:52.183 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: user|||user.firstName|||user.firstName|||'Some message ' + user.firstName + user.password|||_tmp_15.text|||{
        to: user.email,
        from: 'test@example.com', // Use the email address or domain you verified above
        subject: 'Welcome note',
        text: 'Some message ' + user.firstName + user.password,
        html: '<strong>and easy to do anywhere, even with Node.js</strong>',
      }|||msg|||msg|||msg|||msg|||sgMail.send(msg)|||_tmp_0|||_tmp_0|||sgMail.send(msg).then(() => {}, error => {
    console.error(error);

    if (error.response) {
      console.error(error.response.body)
    }
})
2024-09-10 16:11:52.184 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.198 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.ContactData.EmailAddress, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.198 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:52.198 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: user|||user|||user.firstName|||user.firstName|||'Some message ' + user.firstName + user.password|||_tmp_15.text|||{
        to: user.email,
        from: 'test@example.com', // Use the email address or domain you verified above
        subject: 'Welcome note',
        text: 'Some message ' + user.firstName + user.password,
        html: '<strong>and easy to do anywhere, even with Node.js</strong>',
      }|||msg|||msg|||msg|||msg|||sgMail.send(msg)|||_tmp_0|||_tmp_0|||sgMail.send(msg).then(() => {}, error => {
    console.error(error);

    if (error.response) {
      console.error(error.response.body)
    }
})
2024-09-10 16:11:52.199 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.202 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.ContactData.EmailAddress, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.203 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : msg
2024-09-10 16:11:52.203 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: _tmp_11.email|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.firstName|||user.firstName|||'Some message ' + user.firstName + user.password|||_tmp_15.text|||{
        to: user.email,
        from: 'test@example.com', // Use the email address or domain you verified above
        subject: 'Welcome note',
        text: 'Some message ' + user.firstName + user.password,
        html: '<strong>and easy to do anywhere, even with Node.js</strong>',
      }|||msg|||msg|||msg|||msg|||sgMail.send(msg)
2024-09-10 16:11:52.203 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.221 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.ContactData.EmailAddress, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.221 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : msg
2024-09-10 16:11:52.221 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: user|||user.firstName|||user.firstName|||'Some message ' + user.firstName + user.password|||_tmp_15.text|||{
        to: user.email,
        from: 'test@example.com', // Use the email address or domain you verified above
        subject: 'Welcome note',
        text: 'Some message ' + user.firstName + user.password,
        html: '<strong>and easy to do anywhere, even with Node.js</strong>',
      }|||msg|||msg|||msg|||msg|||sgMail.send(msg)
2024-09-10 16:11:52.222 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.283 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.ContactData.EmailAddress, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.286 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : msg
2024-09-10 16:11:52.287 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||user|||user.firstName|||user.firstName|||'Some message ' + user.firstName + user.password|||_tmp_15.text|||{
        to: user.email,
        from: 'test@example.com', // Use the email address or domain you verified above
        subject: 'Welcome note',
        text: 'Some message ' + user.firstName + user.password,
        html: '<strong>and easy to do anywhere, even with Node.js</strong>',
      }|||msg|||msg|||msg|||msg|||sgMail.send(msg)
2024-09-10 16:11:52.287 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.299 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.ContactData.EmailAddress, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.299 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : msg
2024-09-10 16:11:52.300 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: req.body.email|||_tmp_11.email|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.firstName|||user.firstName|||'Some message ' + user.firstName + user.password|||_tmp_15.text|||{
        to: user.email,
        from: 'test@example.com', // Use the email address or domain you verified above
        subject: 'Welcome note',
        text: 'Some message ' + user.firstName + user.password,
        html: '<strong>and easy to do anywhere, even with Node.js</strong>',
      }|||msg|||msg|||msg|||msg|||sgMail.send(msg)
2024-09-10 16:11:52.300 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.302 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.ContactData.EmailAddress, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.302 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : msg
2024-09-10 16:11:52.303 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: user|||user|||user.firstName|||user.firstName|||'Some message ' + user.firstName + user.password|||_tmp_15.text|||{
        to: user.email,
        from: 'test@example.com', // Use the email address or domain you verified above
        subject: 'Welcome note',
        text: 'Some message ' + user.firstName + user.password,
        html: '<strong>and easy to do anywhere, even with Node.js</strong>',
      }|||msg|||msg|||msg|||msg|||sgMail.send(msg)
2024-09-10 16:11:52.303 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.307 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.ContactData.EmailAddress, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.307 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : options
2024-09-10 16:11:52.308 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||firstName|||firstName|||" Fetch results by firstname " + firstName|||_tmp_20.data|||{
    event: "search_users",
    data: " Fetch results by firstname " + firstName
  }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })
2024-09-10 16:11:52.308 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.314 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.ContactData.EmailAddress, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.314 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : data
2024-09-10 16:11:52.314 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||firstName|||firstName|||" Fetch results by firstname " + firstName|||_tmp_20.data|||{
    event: "search_users",
    data: " Fetch results by firstname " + firstName
  }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req|||req.write(data)
2024-09-10 16:11:52.315 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.325 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.ContactData.EmailAddress, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.325 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:52.326 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||firstName|||firstName|||" Fetch results by firstname " + firstName|||_tmp_20.data|||{
    event: "search_users",
    data: " Fetch results by firstname " + firstName
  }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req.on('error', (e) => {
    console.error(`problem with request: ${e.message}`);
  })
2024-09-10 16:11:52.326 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.342 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.ContactData.EmailAddress, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.343 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:52.343 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: req.body.email|||_tmp_11.email|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.firstName|||user.firstName|||'Some message ' + user.firstName + user.password|||_tmp_15.text|||{
        to: user.email,
        from: 'test@example.com', // Use the email address or domain you verified above
        subject: 'Welcome note',
        text: 'Some message ' + user.firstName + user.password,
        html: '<strong>and easy to do anywhere, even with Node.js</strong>',
      }|||msg|||msg|||msg|||msg|||sgMail.send(msg)|||_tmp_0|||_tmp_0|||sgMail.send(msg).then(() => {}, error => {
    console.error(error);

    if (error.response) {
      console.error(error.response.body)
    }
})
2024-09-10 16:11:52.344 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.353 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.ContactData.EmailAddress, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.353 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:52.353 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: User|||User|||user|||user.firstName|||user.firstName|||'Some message ' + user.firstName + user.password|||_tmp_15.text|||{
        to: user.email,
        from: 'test@example.com', // Use the email address or domain you verified above
        subject: 'Welcome note',
        text: 'Some message ' + user.firstName + user.password,
        html: '<strong>and easy to do anywhere, even with Node.js</strong>',
      }|||msg|||msg|||msg|||msg|||sgMail.send(msg)|||_tmp_0|||_tmp_0|||sgMail.send(msg).then(() => {}, error => {
    console.error(error);

    if (error.response) {
      console.error(error.response.body)
    }
})
2024-09-10 16:11:52.354 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.362 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.LastName, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.363 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : msg
2024-09-10 16:11:52.363 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: _tmp_11.lastName|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||'New user ' + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_14.text|||{
        text: 'New user ' + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob,
        channel: conversationId,
      }|||msg|||msg|||web.chat.postMessage(msg)
2024-09-10 16:11:52.363 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.365 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.LastName, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.365 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : options
2024-09-10 16:11:52.366 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: req.body.lastName|||_tmp_11.lastName|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })
2024-09-10 16:11:52.366 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.368 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.LastName, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.368 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:52.369 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: req.body.lastName|||_tmp_11.lastName|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.firstName|||user.firstName|||'Some message ' + user.firstName + user.password|||_tmp_15.text|||{
        to: user.email,
        from: 'test@example.com', // Use the email address or domain you verified above
        subject: 'Welcome note',
        text: 'Some message ' + user.firstName + user.password,
        html: '<strong>and easy to do anywhere, even with Node.js</strong>',
      }|||msg|||msg|||msg|||msg|||sgMail.send(msg)|||_tmp_0|||_tmp_0|||sgMail.send(msg).then(() => {}, error => {
    console.error(error);

    if (error.response) {
      console.error(error.response.body)
    }
})
2024-09-10 16:11:52.369 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.371 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.LastName, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.371 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:52.372 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: _tmp_11.lastName|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req.on('error', (e) => {
    console.error(`problem with request: ${e.message}`);
  })
2024-09-10 16:11:52.372 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.374 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.LastName, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.374 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : data
2024-09-10 16:11:52.375 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: req.body.lastName|||_tmp_11.lastName|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req|||req.write(data)
2024-09-10 16:11:52.375 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.377 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.LastName, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.377 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : msg
2024-09-10 16:11:52.377 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: _tmp_11.lastName|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.firstName|||user.firstName|||'Some message ' + user.firstName + user.password|||_tmp_15.text|||{
        to: user.email,
        from: 'test@example.com', // Use the email address or domain you verified above
        subject: 'Welcome note',
        text: 'Some message ' + user.firstName + user.password,
        html: '<strong>and easy to do anywhere, even with Node.js</strong>',
      }|||msg|||msg|||msg|||msg|||sgMail.send(msg)
2024-09-10 16:11:52.378 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.380 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.LastName, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.380 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : msg
2024-09-10 16:11:52.380 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: req.body.lastName|||_tmp_11.lastName|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||'New user ' + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_14.text|||{
        text: 'New user ' + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob,
        channel: conversationId,
      }|||msg|||msg|||web.chat.postMessage(msg)
2024-09-10 16:11:52.381 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.383 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.LastName, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.384 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : options
2024-09-10 16:11:52.385 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: _tmp_11.lastName|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })
2024-09-10 16:11:52.385 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.388 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.LastName, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.389 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : data
2024-09-10 16:11:52.391 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: _tmp_11.lastName|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req|||req.write(data)
2024-09-10 16:11:52.392 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.394 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.LastName, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.395 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:52.396 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: _tmp_11.lastName|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.firstName|||user.firstName|||'Some message ' + user.firstName + user.password|||_tmp_15.text|||{
        to: user.email,
        from: 'test@example.com', // Use the email address or domain you verified above
        subject: 'Welcome note',
        text: 'Some message ' + user.firstName + user.password,
        html: '<strong>and easy to do anywhere, even with Node.js</strong>',
      }|||msg|||msg|||msg|||msg|||sgMail.send(msg)|||_tmp_0|||_tmp_0|||sgMail.send(msg).then(() => {}, error => {
    console.error(error);

    if (error.response) {
      console.error(error.response.body)
    }
})
2024-09-10 16:11:52.396 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.399 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.LastName, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.399 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:52.400 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: req.body.lastName|||_tmp_11.lastName|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req.on('error', (e) => {
    console.error(`problem with request: ${e.message}`);
  })
2024-09-10 16:11:52.401 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.403 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.LastName, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.404 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : msg
2024-09-10 16:11:52.405 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: req.body.lastName|||_tmp_11.lastName|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.firstName|||user.firstName|||'Some message ' + user.firstName + user.password|||_tmp_15.text|||{
        to: user.email,
        from: 'test@example.com', // Use the email address or domain you verified above
        subject: 'Welcome note',
        text: 'Some message ' + user.firstName + user.password,
        html: '<strong>and easy to do anywhere, even with Node.js</strong>',
      }|||msg|||msg|||msg|||msg|||sgMail.send(msg)
2024-09-10 16:11:52.405 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.408 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.ContactData.PhoneNumber, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.410 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:52.411 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: _tmp_11.phone|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req.on('error', (e) => {
    console.error(`problem with request: ${e.message}`);
  })
2024-09-10 16:11:52.411 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.413 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.ContactData.PhoneNumber, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.413 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:52.414 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: req.body.phone|||_tmp_11.phone|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.firstName|||user.firstName|||'Some message ' + user.firstName + user.password|||_tmp_15.text|||{
        to: user.email,
        from: 'test@example.com', // Use the email address or domain you verified above
        subject: 'Welcome note',
        text: 'Some message ' + user.firstName + user.password,
        html: '<strong>and easy to do anywhere, even with Node.js</strong>',
      }|||msg|||msg|||msg|||msg|||sgMail.send(msg)|||_tmp_0|||_tmp_0|||sgMail.send(msg).then(() => {}, error => {
    console.error(error);

    if (error.response) {
      console.error(error.response.body)
    }
})
2024-09-10 16:11:52.415 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.419 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.ContactData.PhoneNumber, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.419 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : data
2024-09-10 16:11:52.420 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: _tmp_11.phone|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req|||req.write(data)
2024-09-10 16:11:52.420 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.424 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.ContactData.PhoneNumber, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.424 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : msg
2024-09-10 16:11:52.425 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: _tmp_11.phone|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.firstName|||user.firstName|||'Some message ' + user.firstName + user.password|||_tmp_15.text|||{
        to: user.email,
        from: 'test@example.com', // Use the email address or domain you verified above
        subject: 'Welcome note',
        text: 'Some message ' + user.firstName + user.password,
        html: '<strong>and easy to do anywhere, even with Node.js</strong>',
      }|||msg|||msg|||msg|||msg|||sgMail.send(msg)
2024-09-10 16:11:52.425 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.429 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.ContactData.PhoneNumber, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.430 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : msg
2024-09-10 16:11:52.430 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: req.body.phone|||_tmp_11.phone|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.firstName|||user.firstName|||'Some message ' + user.firstName + user.password|||_tmp_15.text|||{
        to: user.email,
        from: 'test@example.com', // Use the email address or domain you verified above
        subject: 'Welcome note',
        text: 'Some message ' + user.firstName + user.password,
        html: '<strong>and easy to do anywhere, even with Node.js</strong>',
      }|||msg|||msg|||msg|||msg|||sgMail.send(msg)
2024-09-10 16:11:52.430 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.438 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.ContactData.PhoneNumber, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.439 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : options
2024-09-10 16:11:52.439 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: _tmp_11.phone|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })
2024-09-10 16:11:52.439 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.453 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.ContactData.PhoneNumber, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.453 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : msg
2024-09-10 16:11:52.454 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: req.body.phone|||_tmp_11.phone|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||'New user ' + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_14.text|||{
        text: 'New user ' + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob,
        channel: conversationId,
      }|||msg|||msg|||web.chat.postMessage(msg)
2024-09-10 16:11:52.454 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.458 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.ContactData.PhoneNumber, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.458 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : data
2024-09-10 16:11:52.459 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: req.body.phone|||_tmp_11.phone|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req|||req.write(data)
2024-09-10 16:11:52.459 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.463 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.ContactData.PhoneNumber, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.463 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : msg
2024-09-10 16:11:52.463 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: _tmp_11.phone|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||'New user ' + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_14.text|||{
        text: 'New user ' + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob,
        channel: conversationId,
      }|||msg|||msg|||web.chat.postMessage(msg)
2024-09-10 16:11:52.464 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.469 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.ContactData.PhoneNumber, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.469 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : options
2024-09-10 16:11:52.469 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: req.body.phone|||_tmp_11.phone|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })
2024-09-10 16:11:52.470 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.479 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.ContactData.PhoneNumber, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.479 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:52.480 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: req.body.phone|||_tmp_11.phone|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req.on('error', (e) => {
    console.error(`problem with request: ${e.message}`);
  })
2024-09-10 16:11:52.480 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.483 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.ContactData.PhoneNumber, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.483 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:52.483 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: _tmp_11.phone|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.firstName|||user.firstName|||'Some message ' + user.firstName + user.password|||_tmp_15.text|||{
        to: user.email,
        from: 'test@example.com', // Use the email address or domain you verified above
        subject: 'Welcome note',
        text: 'Some message ' + user.firstName + user.password,
        html: '<strong>and easy to do anywhere, even with Node.js</strong>',
      }|||msg|||msg|||msg|||msg|||sgMail.send(msg)|||_tmp_0|||_tmp_0|||sgMail.send(msg).then(() => {}, error => {
    console.error(error);

    if (error.response) {
      console.error(error.response.body)
    }
})
2024-09-10 16:11:52.483 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.490 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.DateofBirth, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.491 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : msg
2024-09-10 16:11:52.491 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: _tmp_11.dob|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.firstName|||user.firstName|||'Some message ' + user.firstName + user.password|||_tmp_15.text|||{
        to: user.email,
        from: 'test@example.com', // Use the email address or domain you verified above
        subject: 'Welcome note',
        text: 'Some message ' + user.firstName + user.password,
        html: '<strong>and easy to do anywhere, even with Node.js</strong>',
      }|||msg|||msg|||msg|||msg|||sgMail.send(msg)
2024-09-10 16:11:52.491 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.498 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.DateofBirth, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.498 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:52.499 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: _tmp_11.dob|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.firstName|||user.firstName|||'Some message ' + user.firstName + user.password|||_tmp_15.text|||{
        to: user.email,
        from: 'test@example.com', // Use the email address or domain you verified above
        subject: 'Welcome note',
        text: 'Some message ' + user.firstName + user.password,
        html: '<strong>and easy to do anywhere, even with Node.js</strong>',
      }|||msg|||msg|||msg|||msg|||sgMail.send(msg)|||_tmp_0|||_tmp_0|||sgMail.send(msg).then(() => {}, error => {
    console.error(error);

    if (error.response) {
      console.error(error.response.body)
    }
})
2024-09-10 16:11:52.499 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.513 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.DateofBirth, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.514 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : options
2024-09-10 16:11:52.515 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: _tmp_11.dob|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })
2024-09-10 16:11:52.516 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.518 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.DateofBirth, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.518 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : data
2024-09-10 16:11:52.519 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: _tmp_11.dob|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req|||req.write(data)
2024-09-10 16:11:52.519 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.521 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.DateofBirth, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.522 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : msg
2024-09-10 16:11:52.522 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: req.body.dob|||_tmp_11.dob|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.firstName|||user.firstName|||'Some message ' + user.firstName + user.password|||_tmp_15.text|||{
        to: user.email,
        from: 'test@example.com', // Use the email address or domain you verified above
        subject: 'Welcome note',
        text: 'Some message ' + user.firstName + user.password,
        html: '<strong>and easy to do anywhere, even with Node.js</strong>',
      }|||msg|||msg|||msg|||msg|||sgMail.send(msg)
2024-09-10 16:11:52.523 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.525 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.DateofBirth, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.525 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:52.525 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: _tmp_11.dob|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req.on('error', (e) => {
    console.error(`problem with request: ${e.message}`);
  })
2024-09-10 16:11:52.526 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.533 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.DateofBirth, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.533 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : msg
2024-09-10 16:11:52.533 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: req.body.dob|||_tmp_11.dob|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||'New user ' + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_14.text|||{
        text: 'New user ' + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob,
        channel: conversationId,
      }|||msg|||msg|||web.chat.postMessage(msg)
2024-09-10 16:11:52.534 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.539 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.DateofBirth, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.539 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : msg
2024-09-10 16:11:52.539 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: _tmp_11.dob|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||'New user ' + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_14.text|||{
        text: 'New user ' + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob,
        channel: conversationId,
      }|||msg|||msg|||web.chat.postMessage(msg)
2024-09-10 16:11:52.540 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.544 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.DateofBirth, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.544 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : data
2024-09-10 16:11:52.545 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: req.body.dob|||_tmp_11.dob|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req|||req.write(data)
2024-09-10 16:11:52.545 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.547 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.DateofBirth, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.548 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : options
2024-09-10 16:11:52.548 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: req.body.dob|||_tmp_11.dob|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })
2024-09-10 16:11:52.548 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.552 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.DateofBirth, other matched Data Elements : Data.Sensitive.ContactData.EmailAddress, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.553 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:52.553 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: req.body.dob|||_tmp_11.dob|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.email|||user.email|||user.email|||" new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob|||_tmp_16.data|||{
        event: "signup",
        data: " new signup " + user.email + ' ' + user.firstName + ' ' + user.phone + ' ' + user.dob
      }|||postdata|||postdata|||JSON.stringify(postdata)|||data|||data|||Buffer|||Buffer.byteLength(data)|||_tmp_3.Content-Length|||{
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }|||_tmp_2.headers|||{
    hostname: 'http://localhost:8080',
    port: 80,
    path: '/event',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(data)
    }
  }|||options|||options|||http.request(options, (res) => {
    console.log(`STATUS: ${res.statusCode}`);
    console.log(`HEADERS: ${JSON.stringify(res.headers)}`);
    res.setEncoding('utf8');
    res.on('data', (chunk) => {
      console.log(`BODY: ${chunk}`);
    });
    res.on('end', () => {
      console.log('No more data in response.');
    });
  })|||req|||req|||req.on('error', (e) => {
    console.error(`problem with request: ${e.message}`);
  })
2024-09-10 16:11:52.553 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.555 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:423: Discarding the flow for sourceId : Data.Sensitive.PersonalIdentification.DateofBirth, other matched Data Elements : Data.Sensitive.PersonalIdentification.FirstName, identifier matched Data Elements : , call matched Data Elements : HashSet() Sink type : third_parties Derived source was present : false
2024-09-10 16:11:52.555 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:426: Derived sources are : 
2024-09-10 16:11:52.556 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:428: req.body.dob|||_tmp_11.dob|||{
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      }|||_tmp_10|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||new User({
        firstName: req.body.firstName,
        lastName: req.body.lastName,
        email: req.body.email,
        phone : req.body.phone,
        password : req.body.password,
        dob : req.body.dob,
      })|||user|||user|||user.firstName|||user.firstName|||'Some message ' + user.firstName + user.password|||_tmp_15.text|||{
        to: user.email,
        from: 'test@example.com', // Use the email address or domain you verified above
        subject: 'Welcome note',
        text: 'Some message ' + user.firstName + user.password,
        html: '<strong>and easy to do anywhere, even with Node.js</strong>',
      }|||msg|||msg|||msg|||msg|||sgMail.send(msg)|||_tmp_0|||_tmp_0|||sgMail.send(msg).then(() => {}, error => {
    console.error(error);

    if (error.response) {
      console.error(error.response.body)
    }
})
2024-09-10 16:11:52.556 DEBUG ai.privado.dataflow.DuplicateFlowProcessor$ DuplicateFlowProcessor.scala:429: ----------------------------
2024-09-10 16:11:52.564 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:52 GMT 2024 - -- Filtering flows 2 is done ...                                                        - 2280 ms - 00h:00m:02s:280ms           - stats -> '0.00%', '122.26' MB, '3598.71' MB MAX => '0.00%', '165.25' MB
2024-09-10 16:11:52.573 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:52 GMT 2024 - -- Final flows - 375
2024-09-10 16:11:52.576 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:52 GMT 2024 - -- Deduplicating flows is invoked                                                                                               - stats -> '0.00%', '70.75' MB, '3598.71' MB 
2024-09-10 16:11:52.685 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:52 GMT 2024 - -- Deduplicating flows is done ...                                                      - 111 ms - 00h:00m:00s:111ms            - stats -> '0.00%', '0.00' MB, '3598.71' MB MAX => '0.00%', '0.00' MB
2024-09-10 16:11:52.686 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:52 GMT 2024 - -- Unique flows - 89
2024-09-10 16:11:52.696 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:52 GMT 2024 - Finding data flows ... is done ...                                                      - 6644 ms - 00h:00m:06s:644ms           - stats -> '0.00%', '150.32' MB, '3598.71' MB MAX => '0.00%', '193.52' MB
2024-09-10 16:11:52.697 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:52 GMT 2024 - Processed final flows - 89
2024-09-10 16:11:52.700 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:52 GMT 2024 - Brewing result is invoked                                                                                                       - stats -> '0.00%', '72.85' MB, '3598.71' MB 
2024-09-10 16:11:52.715 INFO ai.privado.exporter.JSONExporter$ JSONExporter.scala:328: Initiated the Unresolved flow exporter engine
2024-09-10 16:11:52.746 INFO ai.privado.exporter.JSONExporter$ JSONExporter.scala:332: Completed Unresolved Flow Exporting
2024-09-10 16:11:52.769 INFO ai.privado.exporter.JSONExporter$ JSONExporter.scala:337: Shutting down Unresolved flow Exporter engine
2024-09-10 16:11:52.770 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:52 GMT 2024 - -- Successfully exported Unresolved flow output to '/Users/karanbatavia/Privado/repos/js/njs_accounts/.privado' folder...
2024-09-10 16:11:52.781 INFO ai.privado.exporter.ExporterUtility$ ExporterUtility.scala:354: Initiated exporter engine
2024-09-10 16:11:54.232 DEBUG ai.privado.exporter.ExporterUtility$ ExporterUtility.scala:439: Done with exporting Collections
2024-09-10 16:11:54.249 INFO ai.privado.threatEngine.ThreatEngineExecutor ThreatEngineExecutor.scala:70: Processing 'processing' threat: Threats.Configuration.Mobile.isBackgroundScreenshotEnabled
2024-09-10 16:11:54.280 DEBUG ai.privado.threatEngine.ThreatEngineExecutor ThreatEngineExecutor.scala:319: Did not find AndroidManifest.xml
2024-09-10 16:11:54.281 DEBUG ai.privado.threatEngine.ThreatEngineExecutor ThreatEngineExecutor.scala:242: No implementation detected for threat: Threats.Configuration.Mobile.isBackgroundScreenshotEnabled (isAndroidRepo: false)
2024-09-10 16:11:54.281 INFO ai.privado.threatEngine.ThreatEngineExecutor ThreatEngineExecutor.scala:70: Processing 'processing' threat: Threats.Storage.isAppDataBackupAllowed
2024-09-10 16:11:54.299 DEBUG ai.privado.threatEngine.ThreatEngineExecutor ThreatEngineExecutor.scala:319: Did not find AndroidManifest.xml
2024-09-10 16:11:54.299 DEBUG ai.privado.threatEngine.ThreatEngineExecutor ThreatEngineExecutor.scala:242: No implementation detected for threat: Threats.Storage.isAppDataBackupAllowed (isAndroidRepo: false)
2024-09-10 16:11:54.300 INFO ai.privado.threatEngine.ThreatEngineExecutor ThreatEngineExecutor.scala:70: Processing 'processing' threat: Threats.Storage.isDataStoredOnExternalStorage
2024-09-10 16:11:54.319 DEBUG ai.privado.threatEngine.ThreatEngineExecutor ThreatEngineExecutor.scala:319: Did not find AndroidManifest.xml
2024-09-10 16:11:54.319 DEBUG ai.privado.threatEngine.ThreatEngineExecutor ThreatEngineExecutor.scala:242: No implementation detected for threat: Threats.Storage.isDataStoredOnExternalStorage (isAndroidRepo: false)
2024-09-10 16:11:54.319 INFO ai.privado.threatEngine.ThreatEngineExecutor ThreatEngineExecutor.scala:70: Processing 'processing' threat: Threats.Leakage.isDataLeakingToLog
2024-09-10 16:11:54.337 DEBUG ai.privado.threatEngine.ThreatEngineExecutor ThreatEngineExecutor.scala:319: Did not find AndroidManifest.xml
2024-09-10 16:11:54.338 DEBUG ai.privado.threatEngine.ThreatEngineExecutor ThreatEngineExecutor.scala:242: No implementation detected for threat: Threats.Leakage.isDataLeakingToLog (isAndroidRepo: false)
2024-09-10 16:11:54.338 INFO ai.privado.threatEngine.ThreatEngineExecutor ThreatEngineExecutor.scala:70: Processing 'processing' threat: Threats.Sharing.isIpcDataSharingAllowed
2024-09-10 16:11:54.353 DEBUG ai.privado.threatEngine.ThreatEngineExecutor ThreatEngineExecutor.scala:319: Did not find AndroidManifest.xml
2024-09-10 16:11:54.354 DEBUG ai.privado.threatEngine.ThreatEngineExecutor ThreatEngineExecutor.scala:242: No implementation detected for threat: Threats.Sharing.isIpcDataSharingAllowed (isAndroidRepo: false)
2024-09-10 16:11:54.354 INFO ai.privado.threatEngine.ThreatEngineExecutor ThreatEngineExecutor.scala:70: Processing 'processing' threat: Threats.Sharing.isDataExposedToThirdPartiesViaNotification
2024-09-10 16:11:54.369 DEBUG ai.privado.threatEngine.ThreatEngineExecutor ThreatEngineExecutor.scala:319: Did not find AndroidManifest.xml
2024-09-10 16:11:54.370 DEBUG ai.privado.threatEngine.ThreatEngineExecutor ThreatEngineExecutor.scala:242: No implementation detected for threat: Threats.Sharing.isDataExposedToThirdPartiesViaNotification (isAndroidRepo: false)
2024-09-10 16:11:54.370 INFO ai.privado.threatEngine.ThreatEngineExecutor ThreatEngineExecutor.scala:70: Processing 'processing' threat: Threats.Collection.isKeyboardCacheUsed
2024-09-10 16:11:54.386 DEBUG ai.privado.threatEngine.ThreatEngineExecutor ThreatEngineExecutor.scala:319: Did not find AndroidManifest.xml
2024-09-10 16:11:54.386 DEBUG ai.privado.threatEngine.ThreatEngineExecutor ThreatEngineExecutor.scala:242: No implementation detected for threat: Threats.Collection.isKeyboardCacheUsed (isAndroidRepo: false)
2024-09-10 16:11:54.387 INFO ai.privado.threatEngine.ThreatEngineExecutor ThreatEngineExecutor.scala:70: Processing 'processing' threat: Threats.Collection.isInputMasked
2024-09-10 16:11:54.402 DEBUG ai.privado.threatEngine.ThreatEngineExecutor ThreatEngineExecutor.scala:319: Did not find AndroidManifest.xml
2024-09-10 16:11:54.402 DEBUG ai.privado.threatEngine.ThreatEngineExecutor ThreatEngineExecutor.scala:242: No implementation detected for threat: Threats.Collection.isInputMasked (isAndroidRepo: false)
2024-09-10 16:11:54.415 INFO ai.privado.threatEngine.ThreatEngineExecutor ThreatEngineExecutor.scala:264: Processing 'dataflow' threat: Threats.Configuration.Mobile.isBackgroundScreenshotEnabled
2024-09-10 16:11:54.434 DEBUG ai.privado.threatEngine.ThreatEngineExecutor ThreatEngineExecutor.scala:319: Did not find AndroidManifest.xml
2024-09-10 16:11:54.434 DEBUG ai.privado.threatEngine.ThreatEngineExecutor ThreatEngineExecutor.scala:288: No implementation detected for threat: Threats.Configuration.Mobile.isBackgroundScreenshotEnabled (isAndroidRepo: false)
2024-09-10 16:11:54.435 INFO ai.privado.threatEngine.ThreatEngineExecutor ThreatEngineExecutor.scala:264: Processing 'dataflow' threat: Threats.Storage.isAppDataBackupAllowed
2024-09-10 16:11:54.451 DEBUG ai.privado.threatEngine.ThreatEngineExecutor ThreatEngineExecutor.scala:319: Did not find AndroidManifest.xml
2024-09-10 16:11:54.451 DEBUG ai.privado.threatEngine.ThreatEngineExecutor ThreatEngineExecutor.scala:288: No implementation detected for threat: Threats.Storage.isAppDataBackupAllowed (isAndroidRepo: false)
2024-09-10 16:11:54.452 INFO ai.privado.threatEngine.ThreatEngineExecutor ThreatEngineExecutor.scala:264: Processing 'dataflow' threat: Threats.Storage.isDataStoredOnExternalStorage
2024-09-10 16:11:54.467 DEBUG ai.privado.threatEngine.ThreatEngineExecutor ThreatEngineExecutor.scala:319: Did not find AndroidManifest.xml
2024-09-10 16:11:54.467 DEBUG ai.privado.threatEngine.ThreatEngineExecutor ThreatEngineExecutor.scala:288: No implementation detected for threat: Threats.Storage.isDataStoredOnExternalStorage (isAndroidRepo: false)
2024-09-10 16:11:54.468 INFO ai.privado.threatEngine.ThreatEngineExecutor ThreatEngineExecutor.scala:264: Processing 'dataflow' threat: Threats.Leakage.isDataLeakingToLog
2024-09-10 16:11:54.488 DEBUG ai.privado.threatEngine.ThreatEngineExecutor ThreatEngineExecutor.scala:319: Did not find AndroidManifest.xml
2024-09-10 16:11:54.528 INFO ai.privado.threatEngine.ThreatEngineExecutor ThreatEngineExecutor.scala:264: Processing 'dataflow' threat: Threats.Sharing.isIpcDataSharingAllowed
2024-09-10 16:11:54.549 DEBUG ai.privado.threatEngine.ThreatEngineExecutor ThreatEngineExecutor.scala:319: Did not find AndroidManifest.xml
2024-09-10 16:11:54.549 DEBUG ai.privado.threatEngine.ThreatEngineExecutor ThreatEngineExecutor.scala:288: No implementation detected for threat: Threats.Sharing.isIpcDataSharingAllowed (isAndroidRepo: false)
2024-09-10 16:11:54.550 INFO ai.privado.threatEngine.ThreatEngineExecutor ThreatEngineExecutor.scala:264: Processing 'dataflow' threat: Threats.Sharing.isDataExposedToThirdPartiesViaNotification
2024-09-10 16:11:54.567 DEBUG ai.privado.threatEngine.ThreatEngineExecutor ThreatEngineExecutor.scala:319: Did not find AndroidManifest.xml
2024-09-10 16:11:54.568 DEBUG ai.privado.threatEngine.ThreatEngineExecutor ThreatEngineExecutor.scala:288: No implementation detected for threat: Threats.Sharing.isDataExposedToThirdPartiesViaNotification (isAndroidRepo: false)
2024-09-10 16:11:54.568 INFO ai.privado.threatEngine.ThreatEngineExecutor ThreatEngineExecutor.scala:264: Processing 'dataflow' threat: Threats.Collection.isKeyboardCacheUsed
2024-09-10 16:11:54.586 DEBUG ai.privado.threatEngine.ThreatEngineExecutor ThreatEngineExecutor.scala:319: Did not find AndroidManifest.xml
2024-09-10 16:11:54.587 DEBUG ai.privado.threatEngine.ThreatEngineExecutor ThreatEngineExecutor.scala:288: No implementation detected for threat: Threats.Collection.isKeyboardCacheUsed (isAndroidRepo: false)
2024-09-10 16:11:54.587 INFO ai.privado.threatEngine.ThreatEngineExecutor ThreatEngineExecutor.scala:264: Processing 'dataflow' threat: Threats.Collection.isInputMasked
2024-09-10 16:11:54.602 DEBUG ai.privado.threatEngine.ThreatEngineExecutor ThreatEngineExecutor.scala:319: Did not find AndroidManifest.xml
2024-09-10 16:11:54.603 DEBUG ai.privado.threatEngine.ThreatEngineExecutor ThreatEngineExecutor.scala:288: No implementation detected for threat: Threats.Collection.isInputMasked (isAndroidRepo: false)
2024-09-10 16:11:54.633 DEBUG ai.privado.exporter.ExporterUtility$ ExporterUtility.scala:445: Done with exporting Violations
2024-09-10 16:11:54.732 DEBUG ai.privado.exporter.ExporterUtility$ ExporterUtility.scala:538: Done with exporting Sources
2024-09-10 16:11:54.789 DEBUG ai.privado.exporter.ExporterUtility$ ExporterUtility.scala:541: Done with exporting Processing sources
2024-09-10 16:11:54.790 DEBUG ai.privado.exporter.ExporterUtility$ ExporterUtility.scala:543: Done with exporting Sinks
2024-09-10 16:11:54.831 DEBUG ai.privado.exporter.ExporterUtility$ ExporterUtility.scala:545: Done with exporting Processing Sinks
2024-09-10 16:11:54.832 DEBUG ai.privado.exporter.ExporterUtility$ ExporterUtility.scala:547: Done with exporting android permissions
2024-09-10 16:11:54.929 DEBUG ai.privado.exporter.JSONExporter$ JSONExporter.scala:144: Total False positive flows removed : 
Total flows before FP: 349
Total flows after this filtering: 333
FP by overlapping Data element : 224
Total flows after complete computation : 89
2024-09-10 16:11:54.930 DEBUG ai.privado.exporter.JSONExporter$ JSONExporter.scala:147: Final statistics for FP : HashMap(internal_apis -> 63, leakages -> 40, third_parties -> 121), for total HashMap()
2024-09-10 16:11:55.125 INFO ai.privado.exporter.JSONExporter$ JSONExporter.scala:156: Shutting down Exporter engine
2024-09-10 16:11:55.126 INFO ai.privado.exporter.JSONExporter$ JSONExporter.scala:157: Scanning Completed...
2024-09-10 16:11:55.221 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:55 GMT 2024 - -- Successfully exported output to '/Users/karanbatavia/Privado/repos/js/njs_accounts/.privado' folder...
2024-09-10 16:11:55.228 DEBUG ai.privado.utility.StatsRecorder StatsRecorder.scala:135: Tue Sep 10 16:11:55 GMT 2024 - Brewing result is done ...                                                              - 2527 ms - 00h:00m:02s:527ms           - stats -> '0.00%', '125.63' MB, '3598.71' MB MAX => '0.00%', '164.08' MB
2024-09-10 16:11:55.229 INFO overflowdb.Graph Graph.java:227: shutdown: start
2024-09-10 16:11:55.233 DEBUG overflowdb.HeapUsageMonitor HeapUsageMonitor.java:114: uninstalled GC monitors.
2024-09-10 16:11:55.360 INFO overflowdb.storage.NodesWriter NodesWriter.java:34: serializing and persisting 8100 nodes (this may take a while)
